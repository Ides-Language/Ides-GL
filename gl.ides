struct __va_list_tag {
    var gp_offset: uint32;
    var fp_offset: uint32;
    var overflow_arg_area: void*;
    var reg_save_area: void*;
}
struct  {
    var __mbstate8: void*;  // char [128];
    var _mbstateL: int64;
}
struct __darwin_pthread_handler_rec {
    var __routine: fn(void*, void*): void;
    var __arg: void*;
    var __next: __darwin_pthread_handler_rec*;
}
struct _opaque_pthread_attr_t {
    var __sig: int64;
    var __opaque: void*;  // char [56];
}
struct _opaque_pthread_cond_t {
    var __sig: int64;
    var __opaque: void*;  // char [40];
}
struct _opaque_pthread_condattr_t {
    var __sig: int64;
    var __opaque: void*;  // char [8];
}
struct _opaque_pthread_mutex_t {
    var __sig: int64;
    var __opaque: void*;  // char [56];
}
struct _opaque_pthread_mutexattr_t {
    var __sig: int64;
    var __opaque: void*;  // char [8];
}
struct _opaque_pthread_once_t {
    var __sig: int64;
    var __opaque: void*;  // char [8];
}
struct _opaque_pthread_rwlock_t {
    var __sig: int64;
    var __opaque: void*;  // char [192];
}
struct _opaque_pthread_rwlockattr_t {
    var __sig: int64;
    var __opaque: void*;  // char [16];
}
struct _opaque_pthread_t {
    var __sig: int64;
    var __cleanup_stack: __darwin_pthread_handler_rec*;
    var __opaque: void*;  // char [1168];
}
extern def imaxabs(val j: int64) : int64;
struct  {
    var quot: int64;
    var rem: int64;
}
extern def imaxdiv(val numer: int64, val denom: int64) : ;
extern def strtoimax(val nptr: int8*, val endptr: int8**, val base: int32) : int64;
extern def strtoumax(val nptr: int8*, val endptr: int8**, val base: int32) : uint64;
extern def wcstoimax(val nptr: int32*, val endptr: int32**, val base: int32) : int64;
extern def wcstoumax(val nptr: int32*, val endptr: int32**, val base: int32) : uint64;
struct __GLsync {
}
extern def glClampColorARB(val target: uint32, val clamp: uint32) : void;
extern def glDrawBuffersARB(val n: int32, val bufs: uint32*) : void;
extern def glDrawElementsBaseVertex(val mode: uint32, val count: int32, val type: uint32, val indices: void*, val base_vertex: int32) : void;
extern def glDrawRangeElementsBaseVertex(val mode: uint32, val start: uint32, val end: uint32, val count: int32, val type: uint32, val indices: void*, val base_vertex: int32) : void;
extern def glDrawElementsInstancedBaseVertex(val mode: uint32, val count: int32, val type: uint32, val indices: void*, val primcount: int32, val base_vertex: int32) : void;
extern def glMultiDrawElementsBaseVertex(val mode: uint32, val count: int32*, val type: uint32, val indices: void**, val primcount: int32, val base_vertex: int32*) : void;
extern def glDrawArraysInstancedARB(val mode: uint32, val first: int32, val count: int32, val primcount: int32) : void;
extern def glDrawElementsInstancedARB(val mode: uint32, val count: int32, val type: uint32, val indices: void*, val primcount: int32) : void;
extern def glIsRenderbuffer(val renderbuffer: uint32) : uint8;
extern def glBindRenderbuffer(val target: uint32, val renderbuffer: uint32) : void;
extern def glDeleteRenderbuffers(val n: int32, val renderbuffers: uint32*) : void;
extern def glGenRenderbuffers(val n: int32, val renderbuffers: uint32*) : void;
extern def glRenderbufferStorage(val target: uint32, val internalformat: uint32, val width: int32, val height: int32) : void;
extern def glGetRenderbufferParameteriv(val target: uint32, val pname: uint32, val params: int32*) : void;
extern def glIsFramebuffer(val framebuffer: uint32) : uint8;
extern def glBindFramebuffer(val target: uint32, val framebuffer: uint32) : void;
extern def glDeleteFramebuffers(val n: int32, val framebuffers: uint32*) : void;
extern def glGenFramebuffers(val n: int32, val framebuffers: uint32*) : void;
extern def glCheckFramebufferStatus(val target: uint32) : uint32;
extern def glFramebufferTexture1D(val target: uint32, val attachment: uint32, val textarget: uint32, val texture: uint32, val level: int32) : void;
extern def glFramebufferTexture2D(val target: uint32, val attachment: uint32, val textarget: uint32, val texture: uint32, val level: int32) : void;
extern def glFramebufferTexture3D(val target: uint32, val attachment: uint32, val textarget: uint32, val texture: uint32, val level: int32, val zoffset: int32) : void;
extern def glFramebufferRenderbuffer(val target: uint32, val attachment: uint32, val renderbuffertarget: uint32, val renderbuffer: uint32) : void;
extern def glGetFramebufferAttachmentParameteriv(val target: uint32, val attachment: uint32, val pname: uint32, val params: int32*) : void;
extern def glGenerateMipmap(val target: uint32) : void;
extern def glBlitFramebuffer(val srcX0: int32, val srcY0: int32, val srcX1: int32, val srcY1: int32, val dstX0: int32, val dstY0: int32, val dstX1: int32, val dstY1: int32, val mask: uint32, val filter: uint32) : void;
extern def glRenderbufferStorageMultisample(val target: uint32, val samples: int32, val internalformat: uint32, val width: int32, val height: int32) : void;
extern def glFramebufferTextureLayer(val target: uint32, val attachment: uint32, val texture: uint32, val level: int32, val layer: int32) : void;
extern def glVertexAttribDivisorARB(val index: uint32, val divisor: uint32) : void;
extern def glSampleCoverageARB(val value: float32, val invert: uint8) : void;
extern def glActiveTextureARB(val texture: uint32) : void;
extern def glClientActiveTextureARB(val texture: uint32) : void;
extern def glMultiTexCoord1dARB(val target: uint32, val s: float64) : void;
extern def glMultiTexCoord1dvARB(val target: uint32, val v: float64*) : void;
extern def glMultiTexCoord1fARB(val target: uint32, val s: float32) : void;
extern def glMultiTexCoord1fvARB(val target: uint32, val v: float32*) : void;
extern def glMultiTexCoord1iARB(val target: uint32, val s: int32) : void;
extern def glMultiTexCoord1ivARB(val target: uint32, val v: int32*) : void;
extern def glMultiTexCoord1sARB(val target: uint32, val s: int16) : void;
extern def glMultiTexCoord1svARB(val target: uint32, val v: int16*) : void;
extern def glMultiTexCoord2dARB(val target: uint32, val s: float64, val t: float64) : void;
extern def glMultiTexCoord2dvARB(val target: uint32, val v: float64*) : void;
extern def glMultiTexCoord2fARB(val target: uint32, val s: float32, val t: float32) : void;
extern def glMultiTexCoord2fvARB(val target: uint32, val v: float32*) : void;
extern def glMultiTexCoord2iARB(val target: uint32, val s: int32, val t: int32) : void;
extern def glMultiTexCoord2ivARB(val target: uint32, val v: int32*) : void;
extern def glMultiTexCoord2sARB(val target: uint32, val s: int16, val t: int16) : void;
extern def glMultiTexCoord2svARB(val target: uint32, val v: int16*) : void;
extern def glMultiTexCoord3dARB(val target: uint32, val s: float64, val t: float64, val r: float64) : void;
extern def glMultiTexCoord3dvARB(val target: uint32, val v: float64*) : void;
extern def glMultiTexCoord3fARB(val target: uint32, val s: float32, val t: float32, val r: float32) : void;
extern def glMultiTexCoord3fvARB(val target: uint32, val v: float32*) : void;
extern def glMultiTexCoord3iARB(val target: uint32, val s: int32, val t: int32, val r: int32) : void;
extern def glMultiTexCoord3ivARB(val target: uint32, val v: int32*) : void;
extern def glMultiTexCoord3sARB(val target: uint32, val s: int16, val t: int16, val r: int16) : void;
extern def glMultiTexCoord3svARB(val target: uint32, val v: int16*) : void;
extern def glMultiTexCoord4dARB(val target: uint32, val s: float64, val t: float64, val r: float64, val q: float64) : void;
extern def glMultiTexCoord4dvARB(val target: uint32, val v: float64*) : void;
extern def glMultiTexCoord4fARB(val target: uint32, val s: float32, val t: float32, val r: float32, val q: float32) : void;
extern def glMultiTexCoord4fvARB(val target: uint32, val v: float32*) : void;
extern def glMultiTexCoord4iARB(val target: uint32, val s: int32, val t: int32, val r: int32, val q: int32) : void;
extern def glMultiTexCoord4ivARB(val target: uint32, val v: int32*) : void;
extern def glMultiTexCoord4sARB(val target: uint32, val s: int16, val t: int16, val r: int16, val q: int16) : void;
extern def glMultiTexCoord4svARB(val target: uint32, val v: int16*) : void;
extern def glGenQueriesARB(val n: int32, val ids: uint32*) : void;
extern def glDeleteQueriesARB(val n: int32, val ids: uint32*) : void;
extern def glIsQueryARB(val id: uint32) : uint8;
extern def glBeginQueryARB(val target: uint32, val id: uint32) : void;
extern def glEndQueryARB(val target: uint32) : void;
extern def glGetQueryivARB(val target: uint32, val pname: uint32, val params: int32*) : void;
extern def glGetQueryObjectivARB(val id: uint32, val pname: uint32, val params: int32*) : void;
extern def glGetQueryObjectuivARB(val id: uint32, val pname: uint32, val params: uint32*) : void;
extern def glPointParameterfARB(val pname: uint32, val param: float32) : void;
extern def glPointParameterfvARB(val pname: uint32, val params: float32*) : void;
extern def glProvokingVertex(val mode: uint32) : void;
extern def glDeleteObjectARB(val obj: void*) : void;
extern def glGetHandleARB(val pname: uint32) : void*;
extern def glDetachObjectARB(val containerObj: void*, val attachedObj: void*) : void;
extern def glCreateShaderObjectARB(val shaderType: uint32) : void*;
extern def glShaderSourceARB(val shaderObj: void*, val count: int32, val string: int8**, val length: int32*) : void;
extern def glCompileShaderARB(val shaderObj: void*) : void;
extern def glCreateProgramObjectARB() : void*;
extern def glAttachObjectARB(val containerObj: void*, val obj: void*) : void;
extern def glLinkProgramARB(val programObj: void*) : void;
extern def glUseProgramObjectARB(val programObj: void*) : void;
extern def glValidateProgramARB(val programObj: void*) : void;
extern def glUniform1fARB(val location: int32, val v0: float32) : void;
extern def glUniform2fARB(val location: int32, val v0: float32, val v1: float32) : void;
extern def glUniform3fARB(val location: int32, val v0: float32, val v1: float32, val v2: float32) : void;
extern def glUniform4fARB(val location: int32, val v0: float32, val v1: float32, val v2: float32, val v3: float32) : void;
extern def glUniform1iARB(val location: int32, val v0: int32) : void;
extern def glUniform2iARB(val location: int32, val v0: int32, val v1: int32) : void;
extern def glUniform3iARB(val location: int32, val v0: int32, val v1: int32, val v2: int32) : void;
extern def glUniform4iARB(val location: int32, val v0: int32, val v1: int32, val v2: int32, val v3: int32) : void;
extern def glUniform1fvARB(val location: int32, val count: int32, val value: float32*) : void;
extern def glUniform2fvARB(val location: int32, val count: int32, val value: float32*) : void;
extern def glUniform3fvARB(val location: int32, val count: int32, val value: float32*) : void;
extern def glUniform4fvARB(val location: int32, val count: int32, val value: float32*) : void;
extern def glUniform1ivARB(val location: int32, val count: int32, val value: int32*) : void;
extern def glUniform2ivARB(val location: int32, val count: int32, val value: int32*) : void;
extern def glUniform3ivARB(val location: int32, val count: int32, val value: int32*) : void;
extern def glUniform4ivARB(val location: int32, val count: int32, val value: int32*) : void;
extern def glUniformMatrix2fvARB(val location: int32, val count: int32, val transpose: uint8, val value: float32*) : void;
extern def glUniformMatrix3fvARB(val location: int32, val count: int32, val transpose: uint8, val value: float32*) : void;
extern def glUniformMatrix4fvARB(val location: int32, val count: int32, val transpose: uint8, val value: float32*) : void;
extern def glGetObjectParameterfvARB(val obj: void*, val pname: uint32, val params: float32*) : void;
extern def glGetObjectParameterivARB(val obj: void*, val pname: uint32, val params: int32*) : void;
extern def glGetInfoLogARB(val obj: void*, val maxLength: int32, val length: int32*, val infoLog: int8*) : void;
extern def glGetAttachedObjectsARB(val containerObj: void*, val maxCount: int32, val count: int32*, val obj: void**) : void;
extern def glGetUniformLocationARB(val programObj: void*, val name: int8*) : int32;
extern def glGetActiveUniformARB(val programObj: void*, val index: uint32, val maxLength: int32, val length: int32*, val size: int32*, val type: uint32*, val name: int8*) : void;
extern def glGetUniformfvARB(val programObj: void*, val location: int32, val params: float32*) : void;
extern def glGetUniformivARB(val programObj: void*, val location: int32, val params: int32*) : void;
extern def glGetShaderSourceARB(val obj: void*, val maxLength: int32, val length: int32*, val source: int8*) : void;
extern def glFenceSync(val condition: uint32, val flags: uint32) : __GLsync*;
extern def glIsSync(val sync: __GLsync*) : uint8;
extern def glDeleteSync(val sync: __GLsync*) : void;
extern def glClientWaitSync(val sync: __GLsync*, val flags: uint32, val timeout: uint64) : uint32;
extern def glWaitSync(val sync: __GLsync*, val flags: uint32, val timeout: uint64) : void;
extern def glGetInteger64v(val pname: uint32, val params: int64*) : void;
extern def glGetSynciv(val sync: __GLsync*, val pname: uint32, val bufSize: int32, val length: int32*, val values: int32*) : void;
extern def glCompressedTexImage3DARB(val target: uint32, val level: int32, val internalformat: uint32, val width: int32, val height: int32, val depth: int32, val border: int32, val imageSize: int32, val data: void*) : void;
extern def glCompressedTexImage2DARB(val target: uint32, val level: int32, val internalformat: uint32, val width: int32, val height: int32, val border: int32, val imageSize: int32, val data: void*) : void;
extern def glCompressedTexImage1DARB(val target: uint32, val level: int32, val internalformat: uint32, val width: int32, val border: int32, val imageSize: int32, val data: void*) : void;
extern def glCompressedTexSubImage3DARB(val target: uint32, val level: int32, val xoffset: int32, val yoffset: int32, val zoffset: int32, val width: int32, val height: int32, val depth: int32, val format: uint32, val imageSize: int32, val data: void*) : void;
extern def glCompressedTexSubImage2DARB(val target: uint32, val level: int32, val xoffset: int32, val yoffset: int32, val width: int32, val height: int32, val format: uint32, val imageSize: int32, val data: void*) : void;
extern def glCompressedTexSubImage1DARB(val target: uint32, val level: int32, val xoffset: int32, val width: int32, val format: uint32, val imageSize: int32, val data: void*) : void;
extern def glGetCompressedTexImageARB(val target: uint32, val level: int32, val data: void*) : void;
extern def glLoadTransposeMatrixfARB(val m: float32*) : void;
extern def glLoadTransposeMatrixdARB(val m: float64*) : void;
extern def glMultTransposeMatrixfARB(val m: float32*) : void;
extern def glMultTransposeMatrixdARB(val m: float64*) : void;
extern def glWeightbvARB(val size: int32, val weights: int8*) : void;
extern def glWeightsvARB(val size: int32, val weights: int16*) : void;
extern def glWeightivARB(val size: int32, val weights: int32*) : void;
extern def glWeightfvARB(val size: int32, val weights: float32*) : void;
extern def glWeightdvARB(val size: int32, val weights: float64*) : void;
extern def glWeightubvARB(val size: int32, val weights: uint8*) : void;
extern def glWeightusvARB(val size: int32, val weights: uint16*) : void;
extern def glWeightuivARB(val size: int32, val weights: uint32*) : void;
extern def glWeightPointerARB(val size: int32, val type: uint32, val stride: int32, val pointer: void*) : void;
extern def glVertexBlendARB(val count: int32) : void;
extern def glBindBufferARB(val target: uint32, val buffer: uint32) : void;
extern def glDeleteBuffersARB(val n: int32, val buffers: uint32*) : void;
extern def glGenBuffersARB(val n: int32, val buffers: uint32*) : void;
extern def glIsBufferARB(val buffer: uint32) : uint8;
extern def glBufferDataARB(val target: uint32, val size: int64, val data: void*, val usage: uint32) : void;
extern def glBufferSubDataARB(val target: uint32, val offset: int64, val size: int64, val data: void*) : void;
extern def glGetBufferSubDataARB(val target: uint32, val offset: int64, val size: int64, val data: void*) : void;
extern def glMapBufferARB(val target: uint32, val access: uint32) : void*;
extern def glUnmapBufferARB(val target: uint32) : uint8;
extern def glGetBufferParameterivARB(val target: uint32, val pname: uint32, val params: int32*) : void;
extern def glGetBufferPointervARB(val target: uint32, val pname: uint32, val params: void**) : void;
extern def glBindProgramARB(val target: uint32, val program: uint32) : void;
extern def glDeleteProgramsARB(val n: int32, val programs: uint32*) : void;
extern def glGenProgramsARB(val n: int32, val programs: uint32*) : void;
extern def glIsProgramARB(val program: uint32) : uint8;
extern def glProgramEnvParameter4dARB(val target: uint32, val index: uint32, val x: float64, val y: float64, val z: float64, val w: float64) : void;
extern def glProgramEnvParameter4dvARB(val target: uint32, val index: uint32, val params: float64*) : void;
extern def glProgramEnvParameter4fARB(val target: uint32, val index: uint32, val x: float32, val y: float32, val z: float32, val w: float32) : void;
extern def glProgramEnvParameter4fvARB(val target: uint32, val index: uint32, val params: float32*) : void;
extern def glProgramLocalParameter4dARB(val target: uint32, val index: uint32, val x: float64, val y: float64, val z: float64, val w: float64) : void;
extern def glProgramLocalParameter4dvARB(val target: uint32, val index: uint32, val params: float64*) : void;
extern def glProgramLocalParameter4fARB(val target: uint32, val index: uint32, val x: float32, val y: float32, val z: float32, val w: float32) : void;
extern def glProgramLocalParameter4fvARB(val target: uint32, val index: uint32, val params: float32*) : void;
extern def glGetProgramEnvParameterdvARB(val target: uint32, val index: uint32, val params: float64*) : void;
extern def glGetProgramEnvParameterfvARB(val target: uint32, val index: uint32, val params: float32*) : void;
extern def glProgramEnvParameters4fvEXT(val target: uint32, val index: uint32, val count: int32, val params: float32*) : void;
extern def glProgramLocalParameters4fvEXT(val target: uint32, val index: uint32, val count: int32, val params: float32*) : void;
extern def glGetProgramLocalParameterdvARB(val target: uint32, val index: uint32, val params: float64*) : void;
extern def glGetProgramLocalParameterfvARB(val target: uint32, val index: uint32, val params: float32*) : void;
extern def glProgramStringARB(val target: uint32, val format: uint32, val len: int32, val string: void*) : void;
extern def glGetProgramStringARB(val target: uint32, val pname: uint32, val string: void*) : void;
extern def glGetProgramivARB(val target: uint32, val pname: uint32, val params: int32*) : void;
extern def glBindAttribLocationARB(val programObj: void*, val index: uint32, val name: int8*) : void;
extern def glGetActiveAttribARB(val programObj: void*, val index: uint32, val maxLength: int32, val length: int32*, val size: int32*, val type: uint32*, val name: int8*) : void;
extern def glGetAttribLocationARB(val programObj: void*, val name: int8*) : int32;
extern def glVertexAttrib1dARB(val index: uint32, val x: float64) : void;
extern def glVertexAttrib1dvARB(val index: uint32, val v: float64*) : void;
extern def glVertexAttrib1fARB(val index: uint32, val x: float32) : void;
extern def glVertexAttrib1fvARB(val index: uint32, val v: float32*) : void;
extern def glVertexAttrib1sARB(val index: uint32, val x: int16) : void;
extern def glVertexAttrib1svARB(val index: uint32, val v: int16*) : void;
extern def glVertexAttrib2dARB(val index: uint32, val x: float64, val y: float64) : void;
extern def glVertexAttrib2dvARB(val index: uint32, val v: float64*) : void;
extern def glVertexAttrib2fARB(val index: uint32, val x: float32, val y: float32) : void;
extern def glVertexAttrib2fvARB(val index: uint32, val v: float32*) : void;
extern def glVertexAttrib2sARB(val index: uint32, val x: int16, val y: int16) : void;
extern def glVertexAttrib2svARB(val index: uint32, val v: int16*) : void;
extern def glVertexAttrib3dARB(val index: uint32, val x: float64, val y: float64, val z: float64) : void;
extern def glVertexAttrib3dvARB(val index: uint32, val v: float64*) : void;
extern def glVertexAttrib3fARB(val index: uint32, val x: float32, val y: float32, val z: float32) : void;
extern def glVertexAttrib3fvARB(val index: uint32, val v: float32*) : void;
extern def glVertexAttrib3sARB(val index: uint32, val x: int16, val y: int16, val z: int16) : void;
extern def glVertexAttrib3svARB(val index: uint32, val v: int16*) : void;
extern def glVertexAttrib4NbvARB(val index: uint32, val v: int8*) : void;
extern def glVertexAttrib4NivARB(val index: uint32, val v: int32*) : void;
extern def glVertexAttrib4NsvARB(val index: uint32, val v: int16*) : void;
extern def glVertexAttrib4NubARB(val index: uint32, val x: uint8, val y: uint8, val z: uint8, val w: uint8) : void;
extern def glVertexAttrib4NubvARB(val index: uint32, val v: uint8*) : void;
extern def glVertexAttrib4NuivARB(val index: uint32, val v: uint32*) : void;
extern def glVertexAttrib4NusvARB(val index: uint32, val v: uint16*) : void;
extern def glVertexAttrib4bvARB(val index: uint32, val v: int8*) : void;
extern def glVertexAttrib4dARB(val index: uint32, val x: float64, val y: float64, val z: float64, val w: float64) : void;
extern def glVertexAttrib4dvARB(val index: uint32, val v: float64*) : void;
extern def glVertexAttrib4fARB(val index: uint32, val x: float32, val y: float32, val z: float32, val w: float32) : void;
extern def glVertexAttrib4fvARB(val index: uint32, val v: float32*) : void;
extern def glVertexAttrib4ivARB(val index: uint32, val v: int32*) : void;
extern def glVertexAttrib4sARB(val index: uint32, val x: int16, val y: int16, val z: int16, val w: int16) : void;
extern def glVertexAttrib4svARB(val index: uint32, val v: int16*) : void;
extern def glVertexAttrib4ubvARB(val index: uint32, val v: uint8*) : void;
extern def glVertexAttrib4uivARB(val index: uint32, val v: uint32*) : void;
extern def glVertexAttrib4usvARB(val index: uint32, val v: uint16*) : void;
extern def glVertexAttribPointerARB(val index: uint32, val size: int32, val type: uint32, val normalized: uint8, val stride: int32, val pointer: void*) : void;
extern def glDisableVertexAttribArrayARB(val index: uint32) : void;
extern def glEnableVertexAttribArrayARB(val index: uint32) : void;
extern def glGetVertexAttribPointervARB(val index: uint32, val pname: uint32, val pointer: void**) : void;
extern def glGetVertexAttribdvARB(val index: uint32, val pname: uint32, val params: float64*) : void;
extern def glGetVertexAttribfvARB(val index: uint32, val pname: uint32, val params: float32*) : void;
extern def glGetVertexAttribivARB(val index: uint32, val pname: uint32, val params: int32*) : void;
extern def glWindowPos2dARB(val x: float64, val y: float64) : void;
extern def glWindowPos2dvARB(val p: float64*) : void;
extern def glWindowPos2fARB(val x: float32, val y: float32) : void;
extern def glWindowPos2fvARB(val p: float32*) : void;
extern def glWindowPos2iARB(val x: int32, val y: int32) : void;
extern def glWindowPos2ivARB(val p: int32*) : void;
extern def glWindowPos2sARB(val x: int16, val y: int16) : void;
extern def glWindowPos2svARB(val p: int16*) : void;
extern def glWindowPos3dARB(val x: float64, val y: float64, val z: float64) : void;
extern def glWindowPos3dvARB(val p: float64*) : void;
extern def glWindowPos3fARB(val x: float32, val y: float32, val z: float32) : void;
extern def glWindowPos3fvARB(val p: float32*) : void;
extern def glWindowPos3iARB(val x: int32, val y: int32, val z: int32) : void;
extern def glWindowPos3ivARB(val p: int32*) : void;
extern def glWindowPos3sARB(val x: int16, val y: int16, val z: int16) : void;
extern def glWindowPos3svARB(val p: int16*) : void;
extern def glUniformBufferEXT(val program: uint32, val location: int32, val buffer: uint32) : void;
extern def glGetUniformBufferSizeEXT(val program: uint32, val location: int32) : int32;
extern def glGetUniformOffsetEXT(val program: uint32, val location: int32) : int64;
extern def glBlendColorEXT(val red: float32, val green: float32, val blue: float32, val alpha: float32) : void;
extern def glBlendEquationSeparateEXT(val modeRGB: uint32, val modeAlpha: uint32) : void;
extern def glBlendFuncSeparateEXT(val sfactorRGB: uint32, val dfactorRGB: uint32, val sfactorAlpha: uint32, val dfactorAlpha: uint32) : void;
extern def glBlendEquationEXT(val mode: uint32) : void;
extern def glDepthBoundsEXT(val zmin: float64, val zmax: float64) : void;
extern def glColorMaskIndexedEXT(val index: uint32, val r: uint8, val g: uint8, val b: uint8, val a: uint8) : void;
extern def glEnableIndexedEXT(val target: uint32, val index: uint32) : void;
extern def glDisableIndexedEXT(val target: uint32, val index: uint32) : void;
extern def glIsEnabledIndexedEXT(val target: uint32, val index: uint32) : uint8;
extern def glDrawRangeElementsEXT(val mode: uint32, val start: uint32, val end: uint32, val count: int32, val type: uint32, val indices: void*) : void;
extern def glFogCoordfEXT(val coord: float32) : void;
extern def glFogCoordfvEXT(val coord: float32*) : void;
extern def glFogCoorddEXT(val coord: float64) : void;
extern def glFogCoorddvEXT(val coord: float64*) : void;
extern def glFogCoordPointerEXT(val type: uint32, val stride: int32, val pointer: void*) : void;
extern def glBlitFramebufferEXT(val srcX0: int32, val srcY0: int32, val srcX1: int32, val srcY1: int32, val dstX0: int32, val dstY0: int32, val dstX1: int32, val dstY1: int32, val mask: uint32, val filter: uint32) : void;
extern def glRenderbufferStorageMultisampleEXT(val target: uint32, val samples: int32, val internalformat: uint32, val width: int32, val height: int32) : void;
extern def glIsRenderbufferEXT(val renderbuffer: uint32) : uint8;
extern def glBindRenderbufferEXT(val target: uint32, val renderbuffer: uint32) : void;
extern def glDeleteRenderbuffersEXT(val n: int32, val renderbuffers: uint32*) : void;
extern def glGenRenderbuffersEXT(val n: int32, val renderbuffers: uint32*) : void;
extern def glRenderbufferStorageEXT(val target: uint32, val internalformat: uint32, val width: int32, val height: int32) : void;
extern def glGetRenderbufferParameterivEXT(val target: uint32, val pname: uint32, val params: int32*) : void;
extern def glIsFramebufferEXT(val framebuffer: uint32) : uint8;
extern def glBindFramebufferEXT(val target: uint32, val framebuffer: uint32) : void;
extern def glDeleteFramebuffersEXT(val n: int32, val framebuffers: uint32*) : void;
extern def glGenFramebuffersEXT(val n: int32, val framebuffers: uint32*) : void;
extern def glCheckFramebufferStatusEXT(val target: uint32) : uint32;
extern def glFramebufferTexture1DEXT(val target: uint32, val attachment: uint32, val textarget: uint32, val texture: uint32, val level: int32) : void;
extern def glFramebufferTexture2DEXT(val target: uint32, val attachment: uint32, val textarget: uint32, val texture: uint32, val level: int32) : void;
extern def glFramebufferTexture3DEXT(val target: uint32, val attachment: uint32, val textarget: uint32, val texture: uint32, val level: int32, val zoffset: int32) : void;
extern def glFramebufferRenderbufferEXT(val target: uint32, val attachment: uint32, val renderbuffertarget: uint32, val renderbuffer: uint32) : void;
extern def glGetFramebufferAttachmentParameterivEXT(val target: uint32, val attachment: uint32, val pname: uint32, val params: int32*) : void;
extern def glGenerateMipmapEXT(val target: uint32) : void;
extern def glProgramParameteriEXT(val program: uint32, val pname: uint32, val value: int32) : void;
extern def glFramebufferTextureEXT(val target: uint32, val attachment: uint32, val texture: uint32, val level: int32) : void;
extern def glFramebufferTextureFaceEXT(val target: uint32, val attachment: uint32, val texture: uint32, val level: int32, val face: uint32) : void;
extern def glFramebufferTextureLayerEXT(val target: uint32, val attachment: uint32, val texture: uint32, val level: int32, val layer: int32) : void;
extern def glVertexAttribI1iEXT(val index: uint32, val x: int32) : void;
extern def glVertexAttribI2iEXT(val index: uint32, val x: int32, val y: int32) : void;
extern def glVertexAttribI3iEXT(val index: uint32, val x: int32, val y: int32, val z: int32) : void;
extern def glVertexAttribI4iEXT(val index: uint32, val x: int32, val y: int32, val z: int32, val w: int32) : void;
extern def glVertexAttribI1uiEXT(val index: uint32, val x: uint32) : void;
extern def glVertexAttribI2uiEXT(val index: uint32, val x: uint32, val y: uint32) : void;
extern def glVertexAttribI3uiEXT(val index: uint32, val x: uint32, val y: uint32, val z: uint32) : void;
extern def glVertexAttribI4uiEXT(val index: uint32, val x: uint32, val y: uint32, val z: uint32, val w: uint32) : void;
extern def glVertexAttribI1ivEXT(val index: uint32, val v: int32*) : void;
extern def glVertexAttribI2ivEXT(val index: uint32, val v: int32*) : void;
extern def glVertexAttribI3ivEXT(val index: uint32, val v: int32*) : void;
extern def glVertexAttribI4ivEXT(val index: uint32, val v: int32*) : void;
extern def glVertexAttribI1uivEXT(val index: uint32, val v: uint32*) : void;
extern def glVertexAttribI2uivEXT(val index: uint32, val v: uint32*) : void;
extern def glVertexAttribI3uivEXT(val index: uint32, val v: uint32*) : void;
extern def glVertexAttribI4uivEXT(val index: uint32, val v: uint32*) : void;
extern def glVertexAttribI4bvEXT(val index: uint32, val v: int8*) : void;
extern def glVertexAttribI4svEXT(val index: uint32, val v: int16*) : void;
extern def glVertexAttribI4ubvEXT(val index: uint32, val v: uint8*) : void;
extern def glVertexAttribI4usvEXT(val index: uint32, val v: uint16*) : void;
extern def glVertexAttribIPointerEXT(val index: uint32, val size: int32, val type: uint32, val stride: int32, val pointer: void*) : void;
extern def glGetVertexAttribIivEXT(val index: uint32, val pname: uint32, val params: int32*) : void;
extern def glGetVertexAttribIuivEXT(val index: uint32, val pname: uint32, val params: uint32*) : void;
extern def glUniform1uiEXT(val location: int32, val v0: uint32) : void;
extern def glUniform2uiEXT(val location: int32, val v0: uint32, val v1: uint32) : void;
extern def glUniform3uiEXT(val location: int32, val v0: uint32, val v1: uint32, val v2: uint32) : void;
extern def glUniform4uiEXT(val location: int32, val v0: uint32, val v1: uint32, val v2: uint32, val v3: uint32) : void;
extern def glUniform1uivEXT(val location: int32, val count: int32, val value: uint32*) : void;
extern def glUniform2uivEXT(val location: int32, val count: int32, val value: uint32*) : void;
extern def glUniform3uivEXT(val location: int32, val count: int32, val value: uint32*) : void;
extern def glUniform4uivEXT(val location: int32, val count: int32, val value: uint32*) : void;
extern def glGetUniformuivEXT(val program: uint32, val location: int32, val params: uint32*) : void;
extern def glBindFragDataLocationEXT(val program: uint32, val colorNumber: uint32, val name: int8*) : void;
extern def glGetFragDataLocationEXT(val program: uint32, val name: int8*) : int32;
extern def glMultiDrawArraysEXT(val mode: uint32, val first: int32*, val count: int32*, val primcount: int32) : void;
extern def glMultiDrawElementsEXT(val mode: uint32, val count: int32*, val type: uint32, val indices: void**, val primcount: int32) : void;
extern def glProvokingVertexEXT(val mode: uint32) : void;
extern def glSecondaryColor3bEXT(val red: int8, val green: int8, val blue: int8) : void;
extern def glSecondaryColor3bvEXT(val v: int8*) : void;
extern def glSecondaryColor3dEXT(val red: float64, val green: float64, val blue: float64) : void;
extern def glSecondaryColor3dvEXT(val v: float64*) : void;
extern def glSecondaryColor3fEXT(val red: float32, val green: float32, val blue: float32) : void;
extern def glSecondaryColor3fvEXT(val v: float32*) : void;
extern def glSecondaryColor3iEXT(val red: int32, val green: int32, val blue: int32) : void;
extern def glSecondaryColor3ivEXT(val v: int32*) : void;
extern def glSecondaryColor3sEXT(val red: int16, val green: int16, val blue: int16) : void;
extern def glSecondaryColor3svEXT(val v: int16*) : void;
extern def glSecondaryColor3ubEXT(val red: uint8, val green: uint8, val blue: uint8) : void;
extern def glSecondaryColor3ubvEXT(val v: uint8*) : void;
extern def glSecondaryColor3uiEXT(val red: uint32, val green: uint32, val blue: uint32) : void;
extern def glSecondaryColor3uivEXT(val v: uint32*) : void;
extern def glSecondaryColor3usEXT(val red: uint16, val green: uint16, val blue: uint16) : void;
extern def glSecondaryColor3usvEXT(val v: uint16*) : void;
extern def glSecondaryColorPointerEXT(val size: int32, val type: uint32, val stride: int32, val pointer: void*) : void;
extern def glActiveStencilFaceEXT(val face: uint32) : void;
extern def glClearColorIiEXT(val r: int32, val g: int32, val b: int32, val a: int32) : void;
extern def glClearColorIuiEXT(val r: uint32, val g: uint32, val b: uint32, val a: uint32) : void;
extern def glTexParameterIivEXT(val target: uint32, val pname: uint32, val params: int32*) : void;
extern def glTexParameterIuivEXT(val target: uint32, val pname: uint32, val params: uint32*) : void;
extern def glGetTexParameterIivEXT(val target: uint32, val pname: uint32, val params: int32*) : void;
extern def glGetTexParameterIuivEXT(val target: uint32, val pname: uint32, val params: uint32*) : void;
extern def glGetQueryObjecti64vEXT(val id: uint32, val pname: uint32, val params: int64*) : void;
extern def glGetQueryObjectui64vEXT(val id: uint32, val pname: uint32, val params: uint64*) : void;
extern def glBindBufferRangeEXT(val target: uint32, val index: uint32, val buffer: uint32, val offset: int64, val size: int64) : void;
extern def glBindBufferOffsetEXT(val target: uint32, val index: uint32, val buffer: uint32, val offset: int64) : void;
extern def glBindBufferBaseEXT(val target: uint32, val index: uint32, val buffer: uint32) : void;
extern def glBeginTransformFeedbackEXT(val primitiveMode: uint32) : void;
extern def glEndTransformFeedbackEXT() : void;
extern def glTransformFeedbackVaryingsEXT(val program: uint32, val count: int32, val varyings: int8**, val bufferMode: uint32) : void;
extern def glGetTransformFeedbackVaryingEXT(val program: uint32, val index: uint32, val bufSize: int32, val length: int32*, val size: int32*, val type: uint32*, val name: int8*) : void;
extern def glGetIntegerIndexedvEXT(val param: uint32, val index: uint32, val values: int32*) : void;
extern def glGetBooleanIndexedvEXT(val param: uint32, val index: uint32, val values: uint8*) : void;
extern def glElementPointerAPPLE(val type: uint32, val pointer: void*) : void;
extern def glDrawElementArrayAPPLE(val mode: uint32, val first: int32, val count: int32) : void;
extern def glDrawRangeElementArrayAPPLE(val mode: uint32, val start: uint32, val end: uint32, val first: int32, val count: int32) : void;
extern def glMultiDrawElementArrayAPPLE(val mode: uint32, val first: int32*, val count: int32*, val primcount: int32) : void;
extern def glMultiDrawRangeElementArrayAPPLE(val mode: uint32, val start: uint32, val end: uint32, val first: int32*, val count: int32*, val primcount: int32) : void;
extern def glGenFencesAPPLE(val n: int32, val fences: uint32*) : void;
extern def glDeleteFencesAPPLE(val n: int32, val fences: uint32*) : void;
extern def glSetFenceAPPLE(val fence: uint32) : void;
extern def glIsFenceAPPLE(val fence: uint32) : uint8;
extern def glTestFenceAPPLE(val fence: uint32) : uint8;
extern def glFinishFenceAPPLE(val fence: uint32) : void;
extern def glTestObjectAPPLE(val object: uint32, val name: uint32) : uint8;
extern def glFinishObjectAPPLE(val object: uint32, val name: uint32) : void;
extern def glBufferParameteriAPPLE(val target: uint32, val pname: uint32, val param: int32) : void;
extern def glFlushMappedBufferRangeAPPLE(val target: uint32, val offset: int64, val size: int64) : void;
extern def glFlushRenderAPPLE() : void;
extern def glFinishRenderAPPLE() : void;
extern def glSwapAPPLE() : void;
extern def glObjectPurgeableAPPLE(val objectType: uint32, val name: uint32, val option: uint32) : uint32;
extern def glObjectUnpurgeableAPPLE(val objectType: uint32, val name: uint32, val option: uint32) : uint32;
extern def glGetObjectParameterivAPPLE(val objectType: uint32, val name: uint32, val pname: uint32, val params: int32*) : void;
extern def glTextureRangeAPPLE(val target: uint32, val length: int32, val pointer: void*) : void;
extern def glGetTexParameterPointervAPPLE(val target: uint32, val pname: uint32, val params: void**) : void;
extern def glBindVertexArrayAPPLE(val id: uint32) : void;
extern def glDeleteVertexArraysAPPLE(val n: int32, val ids: uint32*) : void;
extern def glGenVertexArraysAPPLE(val n: int32, val ids: uint32*) : void;
extern def glIsVertexArrayAPPLE(val id: uint32) : uint8;
extern def glVertexArrayRangeAPPLE(val length: int32, val pointer: void*) : void;
extern def glFlushVertexArrayRangeAPPLE(val length: int32, val pointer: void*) : void;
extern def glVertexArrayParameteriAPPLE(val pname: uint32, val param: int32) : void;
extern def glPointSizePointerAPPLE(val type: uint32, val stride: int32, val pointer: void*) : void;
extern def glVertexPointSizefAPPLE(val size: float32) : void;
extern def glEnableVertexAttribAPPLE(val index: uint32, val pname: uint32) : void;
extern def glDisableVertexAttribAPPLE(val index: uint32, val pname: uint32) : void;
extern def glIsVertexAttribEnabledAPPLE(val index: uint32, val pname: uint32) : uint8;
extern def glMapVertexAttrib1dAPPLE(val index: uint32, val size: uint32, val u1: float64, val u2: float64, val stride: int32, val order: int32, val points: float64*) : void;
extern def glMapVertexAttrib1fAPPLE(val index: uint32, val size: uint32, val u1: float32, val u2: float32, val stride: int32, val order: int32, val points: float32*) : void;
extern def glMapVertexAttrib2dAPPLE(val index: uint32, val size: uint32, val u1: float64, val u2: float64, val ustride: int32, val uorder: int32, val v1: float64, val v2: float64, val vstride: int32, val vorder: int32, val points: float64*) : void;
extern def glMapVertexAttrib2fAPPLE(val index: uint32, val size: uint32, val u1: float32, val u2: float32, val ustride: int32, val uorder: int32, val v1: float32, val v2: float32, val vstride: int32, val vorder: int32, val points: float32*) : void;
extern def glBlendEquationSeparateATI(val equationRGB: uint32, val equationAlpha: uint32) : void;
extern def glStencilOpSeparateATI(val face: uint32, val sfail: uint32, val dpfail: uint32, val dppass: uint32) : void;
extern def glStencilFuncSeparateATI(val frontfunc: uint32, val backfunc: uint32, val ref: int32, val mask: uint32) : void;
extern def glBeginConditionalRenderNV(val id: uint32, val mode: uint32) : void;
extern def glEndConditionalRenderNV() : void;
extern def glPointParameteriNV(val pname: uint32, val param: int32) : void;
extern def glPointParameterivNV(val pname: uint32, val params: int32*) : void;
extern def glAccum(val op: uint32, val value: float32) : void;
extern def glAlphaFunc(val func: uint32, val ref: float32) : void;
extern def glAreTexturesResident(val n: int32, val textures: uint32*, val residences: uint8*) : uint8;
extern def glArrayElement(val i: int32) : void;
extern def glBegin(val mode: uint32) : void;
extern def glBindTexture(val target: uint32, val texture: uint32) : void;
extern def glBitmap(val width: int32, val height: int32, val xorig: float32, val yorig: float32, val xmove: float32, val ymove: float32, val bitmap: uint8*) : void;
extern def glBlendColor(val red: float32, val green: float32, val blue: float32, val alpha: float32) : void;
extern def glBlendEquation(val mode: uint32) : void;
extern def glBlendEquationSeparate(val modeRGB: uint32, val modeAlpha: uint32) : void;
extern def glBlendFunc(val sfactor: uint32, val dfactor: uint32) : void;
extern def glCallList(val list: uint32) : void;
extern def glCallLists(val n: int32, val type: uint32, val lists: void*) : void;
extern def glClear(val mask: uint32) : void;
extern def glClearAccum(val red: float32, val green: float32, val blue: float32, val alpha: float32) : void;
extern def glClearColor(val red: float32, val green: float32, val blue: float32, val alpha: float32) : void;
extern def glClearDepth(val depth: float64) : void;
extern def glClearIndex(val c: float32) : void;
extern def glClearStencil(val s: int32) : void;
extern def glClipPlane(val plane: uint32, val equation: float64*) : void;
extern def glColor3b(val red: int8, val green: int8, val blue: int8) : void;
extern def glColor3bv(val v: int8*) : void;
extern def glColor3d(val red: float64, val green: float64, val blue: float64) : void;
extern def glColor3dv(val v: float64*) : void;
extern def glColor3f(val red: float32, val green: float32, val blue: float32) : void;
extern def glColor3fv(val v: float32*) : void;
extern def glColor3i(val red: int32, val green: int32, val blue: int32) : void;
extern def glColor3iv(val v: int32*) : void;
extern def glColor3s(val red: int16, val green: int16, val blue: int16) : void;
extern def glColor3sv(val v: int16*) : void;
extern def glColor3ub(val red: uint8, val green: uint8, val blue: uint8) : void;
extern def glColor3ubv(val v: uint8*) : void;
extern def glColor3ui(val red: uint32, val green: uint32, val blue: uint32) : void;
extern def glColor3uiv(val v: uint32*) : void;
extern def glColor3us(val red: uint16, val green: uint16, val blue: uint16) : void;
extern def glColor3usv(val v: uint16*) : void;
extern def glColor4b(val red: int8, val green: int8, val blue: int8, val alpha: int8) : void;
extern def glColor4bv(val v: int8*) : void;
extern def glColor4d(val red: float64, val green: float64, val blue: float64, val alpha: float64) : void;
extern def glColor4dv(val v: float64*) : void;
extern def glColor4f(val red: float32, val green: float32, val blue: float32, val alpha: float32) : void;
extern def glColor4fv(val v: float32*) : void;
extern def glColor4i(val red: int32, val green: int32, val blue: int32, val alpha: int32) : void;
extern def glColor4iv(val v: int32*) : void;
extern def glColor4s(val red: int16, val green: int16, val blue: int16, val alpha: int16) : void;
extern def glColor4sv(val v: int16*) : void;
extern def glColor4ub(val red: uint8, val green: uint8, val blue: uint8, val alpha: uint8) : void;
extern def glColor4ubv(val v: uint8*) : void;
extern def glColor4ui(val red: uint32, val green: uint32, val blue: uint32, val alpha: uint32) : void;
extern def glColor4uiv(val v: uint32*) : void;
extern def glColor4us(val red: uint16, val green: uint16, val blue: uint16, val alpha: uint16) : void;
extern def glColor4usv(val v: uint16*) : void;
extern def glColorMask(val red: uint8, val green: uint8, val blue: uint8, val alpha: uint8) : void;
extern def glColorMaterial(val face: uint32, val mode: uint32) : void;
extern def glColorPointer(val size: int32, val type: uint32, val stride: int32, val pointer: void*) : void;
extern def glColorSubTable(val target: uint32, val start: int32, val count: int32, val format: uint32, val type: uint32, val data: void*) : void;
extern def glColorTable(val target: uint32, val internalformat: uint32, val width: int32, val format: uint32, val type: uint32, val table: void*) : void;
extern def glColorTableParameterfv(val target: uint32, val pname: uint32, val params: float32*) : void;
extern def glColorTableParameteriv(val target: uint32, val pname: uint32, val params: int32*) : void;
extern def glConvolutionFilter1D(val target: uint32, val internalformat: uint32, val width: int32, val format: uint32, val type: uint32, val image: void*) : void;
extern def glConvolutionFilter2D(val target: uint32, val internalformat: uint32, val width: int32, val height: int32, val format: uint32, val type: uint32, val image: void*) : void;
extern def glConvolutionParameterf(val target: uint32, val pname: uint32, val params: float32) : void;
extern def glConvolutionParameterfv(val target: uint32, val pname: uint32, val params: float32*) : void;
extern def glConvolutionParameteri(val target: uint32, val pname: uint32, val params: int32) : void;
extern def glConvolutionParameteriv(val target: uint32, val pname: uint32, val params: int32*) : void;
extern def glCopyColorSubTable(val target: uint32, val start: int32, val x: int32, val y: int32, val width: int32) : void;
extern def glCopyColorTable(val target: uint32, val internalformat: uint32, val x: int32, val y: int32, val width: int32) : void;
extern def glCopyConvolutionFilter1D(val target: uint32, val internalformat: uint32, val x: int32, val y: int32, val width: int32) : void;
extern def glCopyConvolutionFilter2D(val target: uint32, val internalformat: uint32, val x: int32, val y: int32, val width: int32, val height: int32) : void;
extern def glCopyPixels(val x: int32, val y: int32, val width: int32, val height: int32, val type: uint32) : void;
extern def glCopyTexImage1D(val target: uint32, val level: int32, val internalformat: uint32, val x: int32, val y: int32, val width: int32, val border: int32) : void;
extern def glCopyTexImage2D(val target: uint32, val level: int32, val internalformat: uint32, val x: int32, val y: int32, val width: int32, val height: int32, val border: int32) : void;
extern def glCopyTexSubImage1D(val target: uint32, val level: int32, val xoffset: int32, val x: int32, val y: int32, val width: int32) : void;
extern def glCopyTexSubImage2D(val target: uint32, val level: int32, val xoffset: int32, val yoffset: int32, val x: int32, val y: int32, val width: int32, val height: int32) : void;
extern def glCopyTexSubImage3D(val target: uint32, val level: int32, val xoffset: int32, val yoffset: int32, val zoffset: int32, val x: int32, val y: int32, val width: int32, val height: int32) : void;
extern def glCullFace(val mode: uint32) : void;
extern def glDeleteLists(val list: uint32, val range: int32) : void;
extern def glDeleteTextures(val n: int32, val textures: uint32*) : void;
extern def glDepthFunc(val func: uint32) : void;
extern def glDepthMask(val flag: uint8) : void;
extern def glDepthRange(val zNear: float64, val zFar: float64) : void;
extern def glDisable(val cap: uint32) : void;
extern def glDisableClientState(val array: uint32) : void;
extern def glDrawArrays(val mode: uint32, val first: int32, val count: int32) : void;
extern def glDrawBuffer(val mode: uint32) : void;
extern def glDrawElements(val mode: uint32, val count: int32, val type: uint32, val indices: void*) : void;
extern def glDrawPixels(val width: int32, val height: int32, val format: uint32, val type: uint32, val pixels: void*) : void;
extern def glDrawRangeElements(val mode: uint32, val start: uint32, val end: uint32, val count: int32, val type: uint32, val indices: void*) : void;
extern def glEdgeFlag(val flag: uint8) : void;
extern def glEdgeFlagPointer(val stride: int32, val pointer: void*) : void;
extern def glEdgeFlagv(val flag: uint8*) : void;
extern def glEnable(val cap: uint32) : void;
extern def glEnableClientState(val array: uint32) : void;
extern def glEnd() : void;
extern def glEndList() : void;
extern def glEvalCoord1d(val u: float64) : void;
extern def glEvalCoord1dv(val u: float64*) : void;
extern def glEvalCoord1f(val u: float32) : void;
extern def glEvalCoord1fv(val u: float32*) : void;
extern def glEvalCoord2d(val u: float64, val v: float64) : void;
extern def glEvalCoord2dv(val u: float64*) : void;
extern def glEvalCoord2f(val u: float32, val v: float32) : void;
extern def glEvalCoord2fv(val u: float32*) : void;
extern def glEvalMesh1(val mode: uint32, val i1: int32, val i2: int32) : void;
extern def glEvalMesh2(val mode: uint32, val i1: int32, val i2: int32, val j1: int32, val j2: int32) : void;
extern def glEvalPoint1(val i: int32) : void;
extern def glEvalPoint2(val i: int32, val j: int32) : void;
extern def glFeedbackBuffer(val size: int32, val type: uint32, val buffer: float32*) : void;
extern def glFinish() : void;
extern def glFlush() : void;
extern def glFogf(val pname: uint32, val param: float32) : void;
extern def glFogfv(val pname: uint32, val params: float32*) : void;
extern def glFogi(val pname: uint32, val param: int32) : void;
extern def glFogiv(val pname: uint32, val params: int32*) : void;
extern def glFrontFace(val mode: uint32) : void;
extern def glFrustum(val left: float64, val right: float64, val bottom: float64, val top: float64, val zNear: float64, val zFar: float64) : void;
extern def glGenLists(val range: int32) : uint32;
extern def glGenTextures(val n: int32, val textures: uint32*) : void;
extern def glGetBooleanv(val pname: uint32, val params: uint8*) : void;
extern def glGetClipPlane(val plane: uint32, val equation: float64*) : void;
extern def glGetColorTable(val target: uint32, val format: uint32, val type: uint32, val table: void*) : void;
extern def glGetColorTableParameterfv(val target: uint32, val pname: uint32, val params: float32*) : void;
extern def glGetColorTableParameteriv(val target: uint32, val pname: uint32, val params: int32*) : void;
extern def glGetConvolutionFilter(val target: uint32, val format: uint32, val type: uint32, val image: void*) : void;
extern def glGetConvolutionParameterfv(val target: uint32, val pname: uint32, val params: float32*) : void;
extern def glGetConvolutionParameteriv(val target: uint32, val pname: uint32, val params: int32*) : void;
extern def glGetDoublev(val pname: uint32, val params: float64*) : void;
extern def glGetError() : uint32;
extern def glGetFloatv(val pname: uint32, val params: float32*) : void;
extern def glGetHistogram(val target: uint32, val reset: uint8, val format: uint32, val type: uint32, val values: void*) : void;
extern def glGetHistogramParameterfv(val target: uint32, val pname: uint32, val params: float32*) : void;
extern def glGetHistogramParameteriv(val target: uint32, val pname: uint32, val params: int32*) : void;
extern def glGetIntegerv(val pname: uint32, val params: int32*) : void;
extern def glGetLightfv(val light: uint32, val pname: uint32, val params: float32*) : void;
extern def glGetLightiv(val light: uint32, val pname: uint32, val params: int32*) : void;
extern def glGetMapdv(val target: uint32, val query: uint32, val v: float64*) : void;
extern def glGetMapfv(val target: uint32, val query: uint32, val v: float32*) : void;
extern def glGetMapiv(val target: uint32, val query: uint32, val v: int32*) : void;
extern def glGetMaterialfv(val face: uint32, val pname: uint32, val params: float32*) : void;
extern def glGetMaterialiv(val face: uint32, val pname: uint32, val params: int32*) : void;
extern def glGetMinmax(val target: uint32, val reset: uint8, val format: uint32, val type: uint32, val values: void*) : void;
extern def glGetMinmaxParameterfv(val target: uint32, val pname: uint32, val params: float32*) : void;
extern def glGetMinmaxParameteriv(val target: uint32, val pname: uint32, val params: int32*) : void;
extern def glGetPixelMapfv(val map: uint32, val values: float32*) : void;
extern def glGetPixelMapuiv(val map: uint32, val values: uint32*) : void;
extern def glGetPixelMapusv(val map: uint32, val values: uint16*) : void;
extern def glGetPointerv(val pname: uint32, val params: void**) : void;
extern def glGetPolygonStipple(val mask: uint8*) : void;
extern def glGetSeparableFilter(val target: uint32, val format: uint32, val type: uint32, val row: void*, val column: void*, val span: void*) : void;
extern def glGetString(val name: uint32) : uint8*;
extern def glGetTexEnvfv(val target: uint32, val pname: uint32, val params: float32*) : void;
extern def glGetTexEnviv(val target: uint32, val pname: uint32, val params: int32*) : void;
extern def glGetTexGendv(val coord: uint32, val pname: uint32, val params: float64*) : void;
extern def glGetTexGenfv(val coord: uint32, val pname: uint32, val params: float32*) : void;
extern def glGetTexGeniv(val coord: uint32, val pname: uint32, val params: int32*) : void;
extern def glGetTexImage(val target: uint32, val level: int32, val format: uint32, val type: uint32, val pixels: void*) : void;
extern def glGetTexLevelParameterfv(val target: uint32, val level: int32, val pname: uint32, val params: float32*) : void;
extern def glGetTexLevelParameteriv(val target: uint32, val level: int32, val pname: uint32, val params: int32*) : void;
extern def glGetTexParameterfv(val target: uint32, val pname: uint32, val params: float32*) : void;
extern def glGetTexParameteriv(val target: uint32, val pname: uint32, val params: int32*) : void;
extern def glHint(val target: uint32, val mode: uint32) : void;
extern def glHistogram(val target: uint32, val width: int32, val internalformat: uint32, val sink: uint8) : void;
extern def glIndexMask(val mask: uint32) : void;
extern def glIndexPointer(val type: uint32, val stride: int32, val pointer: void*) : void;
extern def glIndexd(val c: float64) : void;
extern def glIndexdv(val c: float64*) : void;
extern def glIndexf(val c: float32) : void;
extern def glIndexfv(val c: float32*) : void;
extern def glIndexi(val c: int32) : void;
extern def glIndexiv(val c: int32*) : void;
extern def glIndexs(val c: int16) : void;
extern def glIndexsv(val c: int16*) : void;
extern def glIndexub(val c: uint8) : void;
extern def glIndexubv(val c: uint8*) : void;
extern def glInitNames() : void;
extern def glInterleavedArrays(val format: uint32, val stride: int32, val pointer: void*) : void;
extern def glIsEnabled(val cap: uint32) : uint8;
extern def glIsList(val list: uint32) : uint8;
extern def glIsTexture(val texture: uint32) : uint8;
extern def glLightModelf(val pname: uint32, val param: float32) : void;
extern def glLightModelfv(val pname: uint32, val params: float32*) : void;
extern def glLightModeli(val pname: uint32, val param: int32) : void;
extern def glLightModeliv(val pname: uint32, val params: int32*) : void;
extern def glLightf(val light: uint32, val pname: uint32, val param: float32) : void;
extern def glLightfv(val light: uint32, val pname: uint32, val params: float32*) : void;
extern def glLighti(val light: uint32, val pname: uint32, val param: int32) : void;
extern def glLightiv(val light: uint32, val pname: uint32, val params: int32*) : void;
extern def glLineStipple(val factor: int32, val pattern: uint16) : void;
extern def glLineWidth(val width: float32) : void;
extern def glListBase(val base: uint32) : void;
extern def glLoadIdentity() : void;
extern def glLoadMatrixd(val m: float64*) : void;
extern def glLoadMatrixf(val m: float32*) : void;
extern def glLoadName(val name: uint32) : void;
extern def glLogicOp(val opcode: uint32) : void;
extern def glMap1d(val target: uint32, val u1: float64, val u2: float64, val stride: int32, val order: int32, val points: float64*) : void;
extern def glMap1f(val target: uint32, val u1: float32, val u2: float32, val stride: int32, val order: int32, val points: float32*) : void;
extern def glMap2d(val target: uint32, val u1: float64, val u2: float64, val ustride: int32, val uorder: int32, val v1: float64, val v2: float64, val vstride: int32, val vorder: int32, val points: float64*) : void;
extern def glMap2f(val target: uint32, val u1: float32, val u2: float32, val ustride: int32, val uorder: int32, val v1: float32, val v2: float32, val vstride: int32, val vorder: int32, val points: float32*) : void;
extern def glMapGrid1d(val un: int32, val u1: float64, val u2: float64) : void;
extern def glMapGrid1f(val un: int32, val u1: float32, val u2: float32) : void;
extern def glMapGrid2d(val un: int32, val u1: float64, val u2: float64, val vn: int32, val v1: float64, val v2: float64) : void;
extern def glMapGrid2f(val un: int32, val u1: float32, val u2: float32, val vn: int32, val v1: float32, val v2: float32) : void;
extern def glMaterialf(val face: uint32, val pname: uint32, val param: float32) : void;
extern def glMaterialfv(val face: uint32, val pname: uint32, val params: float32*) : void;
extern def glMateriali(val face: uint32, val pname: uint32, val param: int32) : void;
extern def glMaterialiv(val face: uint32, val pname: uint32, val params: int32*) : void;
extern def glMatrixMode(val mode: uint32) : void;
extern def glMinmax(val target: uint32, val internalformat: uint32, val sink: uint8) : void;
extern def glMultMatrixd(val m: float64*) : void;
extern def glMultMatrixf(val m: float32*) : void;
extern def glNewList(val list: uint32, val mode: uint32) : void;
extern def glNormal3b(val nx: int8, val ny: int8, val nz: int8) : void;
extern def glNormal3bv(val v: int8*) : void;
extern def glNormal3d(val nx: float64, val ny: float64, val nz: float64) : void;
extern def glNormal3dv(val v: float64*) : void;
extern def glNormal3f(val nx: float32, val ny: float32, val nz: float32) : void;
extern def glNormal3fv(val v: float32*) : void;
extern def glNormal3i(val nx: int32, val ny: int32, val nz: int32) : void;
extern def glNormal3iv(val v: int32*) : void;
extern def glNormal3s(val nx: int16, val ny: int16, val nz: int16) : void;
extern def glNormal3sv(val v: int16*) : void;
extern def glNormalPointer(val type: uint32, val stride: int32, val pointer: void*) : void;
extern def glOrtho(val left: float64, val right: float64, val bottom: float64, val top: float64, val zNear: float64, val zFar: float64) : void;
extern def glPassThrough(val token: float32) : void;
extern def glPixelMapfv(val map: uint32, val mapsize: int32, val values: float32*) : void;
extern def glPixelMapuiv(val map: uint32, val mapsize: int32, val values: uint32*) : void;
extern def glPixelMapusv(val map: uint32, val mapsize: int32, val values: uint16*) : void;
extern def glPixelStoref(val pname: uint32, val param: float32) : void;
extern def glPixelStorei(val pname: uint32, val param: int32) : void;
extern def glPixelTransferf(val pname: uint32, val param: float32) : void;
extern def glPixelTransferi(val pname: uint32, val param: int32) : void;
extern def glPixelZoom(val xfactor: float32, val yfactor: float32) : void;
extern def glPointSize(val size: float32) : void;
extern def glPolygonMode(val face: uint32, val mode: uint32) : void;
extern def glPolygonOffset(val factor: float32, val units: float32) : void;
extern def glPolygonStipple(val mask: uint8*) : void;
extern def glPopAttrib() : void;
extern def glPopClientAttrib() : void;
extern def glPopMatrix() : void;
extern def glPopName() : void;
extern def glPrioritizeTextures(val n: int32, val textures: uint32*, val priorities: float32*) : void;
extern def glPushAttrib(val mask: uint32) : void;
extern def glPushClientAttrib(val mask: uint32) : void;
extern def glPushMatrix() : void;
extern def glPushName(val name: uint32) : void;
extern def glRasterPos2d(val x: float64, val y: float64) : void;
extern def glRasterPos2dv(val v: float64*) : void;
extern def glRasterPos2f(val x: float32, val y: float32) : void;
extern def glRasterPos2fv(val v: float32*) : void;
extern def glRasterPos2i(val x: int32, val y: int32) : void;
extern def glRasterPos2iv(val v: int32*) : void;
extern def glRasterPos2s(val x: int16, val y: int16) : void;
extern def glRasterPos2sv(val v: int16*) : void;
extern def glRasterPos3d(val x: float64, val y: float64, val z: float64) : void;
extern def glRasterPos3dv(val v: float64*) : void;
extern def glRasterPos3f(val x: float32, val y: float32, val z: float32) : void;
extern def glRasterPos3fv(val v: float32*) : void;
extern def glRasterPos3i(val x: int32, val y: int32, val z: int32) : void;
extern def glRasterPos3iv(val v: int32*) : void;
extern def glRasterPos3s(val x: int16, val y: int16, val z: int16) : void;
extern def glRasterPos3sv(val v: int16*) : void;
extern def glRasterPos4d(val x: float64, val y: float64, val z: float64, val w: float64) : void;
extern def glRasterPos4dv(val v: float64*) : void;
extern def glRasterPos4f(val x: float32, val y: float32, val z: float32, val w: float32) : void;
extern def glRasterPos4fv(val v: float32*) : void;
extern def glRasterPos4i(val x: int32, val y: int32, val z: int32, val w: int32) : void;
extern def glRasterPos4iv(val v: int32*) : void;
extern def glRasterPos4s(val x: int16, val y: int16, val z: int16, val w: int16) : void;
extern def glRasterPos4sv(val v: int16*) : void;
extern def glReadBuffer(val mode: uint32) : void;
extern def glReadPixels(val x: int32, val y: int32, val width: int32, val height: int32, val format: uint32, val type: uint32, val pixels: void*) : void;
extern def glRectd(val x1: float64, val y1: float64, val x2: float64, val y2: float64) : void;
extern def glRectdv(val v1: float64*, val v2: float64*) : void;
extern def glRectf(val x1: float32, val y1: float32, val x2: float32, val y2: float32) : void;
extern def glRectfv(val v1: float32*, val v2: float32*) : void;
extern def glRecti(val x1: int32, val y1: int32, val x2: int32, val y2: int32) : void;
extern def glRectiv(val v1: int32*, val v2: int32*) : void;
extern def glRects(val x1: int16, val y1: int16, val x2: int16, val y2: int16) : void;
extern def glRectsv(val v1: int16*, val v2: int16*) : void;
extern def glRenderMode(val mode: uint32) : int32;
extern def glResetHistogram(val target: uint32) : void;
extern def glResetMinmax(val target: uint32) : void;
extern def glRotated(val angle: float64, val x: float64, val y: float64, val z: float64) : void;
extern def glRotatef(val angle: float32, val x: float32, val y: float32, val z: float32) : void;
extern def glScaled(val x: float64, val y: float64, val z: float64) : void;
extern def glScalef(val x: float32, val y: float32, val z: float32) : void;
extern def glScissor(val x: int32, val y: int32, val width: int32, val height: int32) : void;
extern def glSelectBuffer(val size: int32, val buffer: uint32*) : void;
extern def glSeparableFilter2D(val target: uint32, val internalformat: uint32, val width: int32, val height: int32, val format: uint32, val type: uint32, val row: void*, val column: void*) : void;
extern def glShadeModel(val mode: uint32) : void;
extern def glStencilFunc(val func: uint32, val ref: int32, val mask: uint32) : void;
extern def glStencilMask(val mask: uint32) : void;
extern def glStencilOp(val fail: uint32, val zfail: uint32, val zpass: uint32) : void;
extern def glTexCoord1d(val s: float64) : void;
extern def glTexCoord1dv(val v: float64*) : void;
extern def glTexCoord1f(val s: float32) : void;
extern def glTexCoord1fv(val v: float32*) : void;
extern def glTexCoord1i(val s: int32) : void;
extern def glTexCoord1iv(val v: int32*) : void;
extern def glTexCoord1s(val s: int16) : void;
extern def glTexCoord1sv(val v: int16*) : void;
extern def glTexCoord2d(val s: float64, val t: float64) : void;
extern def glTexCoord2dv(val v: float64*) : void;
extern def glTexCoord2f(val s: float32, val t: float32) : void;
extern def glTexCoord2fv(val v: float32*) : void;
extern def glTexCoord2i(val s: int32, val t: int32) : void;
extern def glTexCoord2iv(val v: int32*) : void;
extern def glTexCoord2s(val s: int16, val t: int16) : void;
extern def glTexCoord2sv(val v: int16*) : void;
extern def glTexCoord3d(val s: float64, val t: float64, val r: float64) : void;
extern def glTexCoord3dv(val v: float64*) : void;
extern def glTexCoord3f(val s: float32, val t: float32, val r: float32) : void;
extern def glTexCoord3fv(val v: float32*) : void;
extern def glTexCoord3i(val s: int32, val t: int32, val r: int32) : void;
extern def glTexCoord3iv(val v: int32*) : void;
extern def glTexCoord3s(val s: int16, val t: int16, val r: int16) : void;
extern def glTexCoord3sv(val v: int16*) : void;
extern def glTexCoord4d(val s: float64, val t: float64, val r: float64, val q: float64) : void;
extern def glTexCoord4dv(val v: float64*) : void;
extern def glTexCoord4f(val s: float32, val t: float32, val r: float32, val q: float32) : void;
extern def glTexCoord4fv(val v: float32*) : void;
extern def glTexCoord4i(val s: int32, val t: int32, val r: int32, val q: int32) : void;
extern def glTexCoord4iv(val v: int32*) : void;
extern def glTexCoord4s(val s: int16, val t: int16, val r: int16, val q: int16) : void;
extern def glTexCoord4sv(val v: int16*) : void;
extern def glTexCoordPointer(val size: int32, val type: uint32, val stride: int32, val pointer: void*) : void;
extern def glTexEnvf(val target: uint32, val pname: uint32, val param: float32) : void;
extern def glTexEnvfv(val target: uint32, val pname: uint32, val params: float32*) : void;
extern def glTexEnvi(val target: uint32, val pname: uint32, val param: int32) : void;
extern def glTexEnviv(val target: uint32, val pname: uint32, val params: int32*) : void;
extern def glTexGend(val coord: uint32, val pname: uint32, val param: float64) : void;
extern def glTexGendv(val coord: uint32, val pname: uint32, val params: float64*) : void;
extern def glTexGenf(val coord: uint32, val pname: uint32, val param: float32) : void;
extern def glTexGenfv(val coord: uint32, val pname: uint32, val params: float32*) : void;
extern def glTexGeni(val coord: uint32, val pname: uint32, val param: int32) : void;
extern def glTexGeniv(val coord: uint32, val pname: uint32, val params: int32*) : void;
extern def glTexImage1D(val target: uint32, val level: int32, val internalformat: int32, val width: int32, val border: int32, val format: uint32, val type: uint32, val pixels: void*) : void;
extern def glTexImage2D(val target: uint32, val level: int32, val internalformat: int32, val width: int32, val height: int32, val border: int32, val format: uint32, val type: uint32, val pixels: void*) : void;
extern def glTexImage3D(val target: uint32, val level: int32, val internalformat: int32, val width: int32, val height: int32, val depth: int32, val border: int32, val format: uint32, val type: uint32, val pixels: void*) : void;
extern def glTexParameterf(val target: uint32, val pname: uint32, val param: float32) : void;
extern def glTexParameterfv(val target: uint32, val pname: uint32, val params: float32*) : void;
extern def glTexParameteri(val target: uint32, val pname: uint32, val param: int32) : void;
extern def glTexParameteriv(val target: uint32, val pname: uint32, val params: int32*) : void;
extern def glTexSubImage1D(val target: uint32, val level: int32, val xoffset: int32, val width: int32, val format: uint32, val type: uint32, val pixels: void*) : void;
extern def glTexSubImage2D(val target: uint32, val level: int32, val xoffset: int32, val yoffset: int32, val width: int32, val height: int32, val format: uint32, val type: uint32, val pixels: void*) : void;
extern def glTexSubImage3D(val target: uint32, val level: int32, val xoffset: int32, val yoffset: int32, val zoffset: int32, val width: int32, val height: int32, val depth: int32, val format: uint32, val type: uint32, val pixels: void*) : void;
extern def glTranslated(val x: float64, val y: float64, val z: float64) : void;
extern def glTranslatef(val x: float32, val y: float32, val z: float32) : void;
extern def glVertex2d(val x: float64, val y: float64) : void;
extern def glVertex2dv(val v: float64*) : void;
extern def glVertex2f(val x: float32, val y: float32) : void;
extern def glVertex2fv(val v: float32*) : void;
extern def glVertex2i(val x: int32, val y: int32) : void;
extern def glVertex2iv(val v: int32*) : void;
extern def glVertex2s(val x: int16, val y: int16) : void;
extern def glVertex2sv(val v: int16*) : void;
extern def glVertex3d(val x: float64, val y: float64, val z: float64) : void;
extern def glVertex3dv(val v: float64*) : void;
extern def glVertex3f(val x: float32, val y: float32, val z: float32) : void;
extern def glVertex3fv(val v: float32*) : void;
extern def glVertex3i(val x: int32, val y: int32, val z: int32) : void;
extern def glVertex3iv(val v: int32*) : void;
extern def glVertex3s(val x: int16, val y: int16, val z: int16) : void;
extern def glVertex3sv(val v: int16*) : void;
extern def glVertex4d(val x: float64, val y: float64, val z: float64, val w: float64) : void;
extern def glVertex4dv(val v: float64*) : void;
extern def glVertex4f(val x: float32, val y: float32, val z: float32, val w: float32) : void;
extern def glVertex4fv(val v: float32*) : void;
extern def glVertex4i(val x: int32, val y: int32, val z: int32, val w: int32) : void;
extern def glVertex4iv(val v: int32*) : void;
extern def glVertex4s(val x: int16, val y: int16, val z: int16, val w: int16) : void;
extern def glVertex4sv(val v: int16*) : void;
extern def glVertexPointer(val size: int32, val type: uint32, val stride: int32, val pointer: void*) : void;
extern def glViewport(val x: int32, val y: int32, val width: int32, val height: int32) : void;
extern def glSampleCoverage(val value: float32, val invert: uint8) : void;
extern def glLoadTransposeMatrixf(val m: float32*) : void;
extern def glLoadTransposeMatrixd(val m: float64*) : void;
extern def glMultTransposeMatrixf(val m: float32*) : void;
extern def glMultTransposeMatrixd(val m: float64*) : void;
extern def glCompressedTexImage3D(val target: uint32, val level: int32, val internalformat: uint32, val width: int32, val height: int32, val depth: int32, val border: int32, val imageSize: int32, val data: void*) : void;
extern def glCompressedTexImage2D(val target: uint32, val level: int32, val internalformat: uint32, val width: int32, val height: int32, val border: int32, val imageSize: int32, val data: void*) : void;
extern def glCompressedTexImage1D(val target: uint32, val level: int32, val internalformat: uint32, val width: int32, val border: int32, val imageSize: int32, val data: void*) : void;
extern def glCompressedTexSubImage3D(val target: uint32, val level: int32, val xoffset: int32, val yoffset: int32, val zoffset: int32, val width: int32, val height: int32, val depth: int32, val format: uint32, val imageSize: int32, val data: void*) : void;
extern def glCompressedTexSubImage2D(val target: uint32, val level: int32, val xoffset: int32, val yoffset: int32, val width: int32, val height: int32, val format: uint32, val imageSize: int32, val data: void*) : void;
extern def glCompressedTexSubImage1D(val target: uint32, val level: int32, val xoffset: int32, val width: int32, val format: uint32, val imageSize: int32, val data: void*) : void;
extern def glGetCompressedTexImage(val target: uint32, val lod: int32, val img: void*) : void;
extern def glActiveTexture(val texture: uint32) : void;
extern def glClientActiveTexture(val texture: uint32) : void;
extern def glMultiTexCoord1d(val target: uint32, val s: float64) : void;
extern def glMultiTexCoord1dv(val target: uint32, val v: float64*) : void;
extern def glMultiTexCoord1f(val target: uint32, val s: float32) : void;
extern def glMultiTexCoord1fv(val target: uint32, val v: float32*) : void;
extern def glMultiTexCoord1i(val target: uint32, val s: int32) : void;
extern def glMultiTexCoord1iv(val target: uint32, val v: int32*) : void;
extern def glMultiTexCoord1s(val target: uint32, val s: int16) : void;
extern def glMultiTexCoord1sv(val target: uint32, val v: int16*) : void;
extern def glMultiTexCoord2d(val target: uint32, val s: float64, val t: float64) : void;
extern def glMultiTexCoord2dv(val target: uint32, val v: float64*) : void;
extern def glMultiTexCoord2f(val target: uint32, val s: float32, val t: float32) : void;
extern def glMultiTexCoord2fv(val target: uint32, val v: float32*) : void;
extern def glMultiTexCoord2i(val target: uint32, val s: int32, val t: int32) : void;
extern def glMultiTexCoord2iv(val target: uint32, val v: int32*) : void;
extern def glMultiTexCoord2s(val target: uint32, val s: int16, val t: int16) : void;
extern def glMultiTexCoord2sv(val target: uint32, val v: int16*) : void;
extern def glMultiTexCoord3d(val target: uint32, val s: float64, val t: float64, val r: float64) : void;
extern def glMultiTexCoord3dv(val target: uint32, val v: float64*) : void;
extern def glMultiTexCoord3f(val target: uint32, val s: float32, val t: float32, val r: float32) : void;
extern def glMultiTexCoord3fv(val target: uint32, val v: float32*) : void;
extern def glMultiTexCoord3i(val target: uint32, val s: int32, val t: int32, val r: int32) : void;
extern def glMultiTexCoord3iv(val target: uint32, val v: int32*) : void;
extern def glMultiTexCoord3s(val target: uint32, val s: int16, val t: int16, val r: int16) : void;
extern def glMultiTexCoord3sv(val target: uint32, val v: int16*) : void;
extern def glMultiTexCoord4d(val target: uint32, val s: float64, val t: float64, val r: float64, val q: float64) : void;
extern def glMultiTexCoord4dv(val target: uint32, val v: float64*) : void;
extern def glMultiTexCoord4f(val target: uint32, val s: float32, val t: float32, val r: float32, val q: float32) : void;
extern def glMultiTexCoord4fv(val target: uint32, val v: float32*) : void;
extern def glMultiTexCoord4i(val target: uint32, val s: int32, val t: int32, val r: int32, val q: int32) : void;
extern def glMultiTexCoord4iv(val target: uint32, val v: int32*) : void;
extern def glMultiTexCoord4s(val target: uint32, val s: int16, val t: int16, val r: int16, val q: int16) : void;
extern def glMultiTexCoord4sv(val target: uint32, val v: int16*) : void;
extern def glFogCoordf(val coord: float32) : void;
extern def glFogCoordfv(val coord: float32*) : void;
extern def glFogCoordd(val coord: float64) : void;
extern def glFogCoorddv(val coord: float64*) : void;
extern def glFogCoordPointer(val type: uint32, val stride: int32, val pointer: void*) : void;
extern def glSecondaryColor3b(val red: int8, val green: int8, val blue: int8) : void;
extern def glSecondaryColor3bv(val v: int8*) : void;
extern def glSecondaryColor3d(val red: float64, val green: float64, val blue: float64) : void;
extern def glSecondaryColor3dv(val v: float64*) : void;
extern def glSecondaryColor3f(val red: float32, val green: float32, val blue: float32) : void;
extern def glSecondaryColor3fv(val v: float32*) : void;
extern def glSecondaryColor3i(val red: int32, val green: int32, val blue: int32) : void;
extern def glSecondaryColor3iv(val v: int32*) : void;
extern def glSecondaryColor3s(val red: int16, val green: int16, val blue: int16) : void;
extern def glSecondaryColor3sv(val v: int16*) : void;
extern def glSecondaryColor3ub(val red: uint8, val green: uint8, val blue: uint8) : void;
extern def glSecondaryColor3ubv(val v: uint8*) : void;
extern def glSecondaryColor3ui(val red: uint32, val green: uint32, val blue: uint32) : void;
extern def glSecondaryColor3uiv(val v: uint32*) : void;
extern def glSecondaryColor3us(val red: uint16, val green: uint16, val blue: uint16) : void;
extern def glSecondaryColor3usv(val v: uint16*) : void;
extern def glSecondaryColorPointer(val size: int32, val type: uint32, val stride: int32, val pointer: void*) : void;
extern def glPointParameterf(val pname: uint32, val param: float32) : void;
extern def glPointParameterfv(val pname: uint32, val params: float32*) : void;
extern def glPointParameteri(val pname: uint32, val param: int32) : void;
extern def glPointParameteriv(val pname: uint32, val params: int32*) : void;
extern def glBlendFuncSeparate(val srcRGB: uint32, val dstRGB: uint32, val srcAlpha: uint32, val dstAlpha: uint32) : void;
extern def glMultiDrawArrays(val mode: uint32, val first: int32*, val count: int32*, val primcount: int32) : void;
extern def glMultiDrawElements(val mode: uint32, val count: int32*, val type: uint32, val indices: void**, val primcount: int32) : void;
extern def glWindowPos2d(val x: float64, val y: float64) : void;
extern def glWindowPos2dv(val v: float64*) : void;
extern def glWindowPos2f(val x: float32, val y: float32) : void;
extern def glWindowPos2fv(val v: float32*) : void;
extern def glWindowPos2i(val x: int32, val y: int32) : void;
extern def glWindowPos2iv(val v: int32*) : void;
extern def glWindowPos2s(val x: int16, val y: int16) : void;
extern def glWindowPos2sv(val v: int16*) : void;
extern def glWindowPos3d(val x: float64, val y: float64, val z: float64) : void;
extern def glWindowPos3dv(val v: float64*) : void;
extern def glWindowPos3f(val x: float32, val y: float32, val z: float32) : void;
extern def glWindowPos3fv(val v: float32*) : void;
extern def glWindowPos3i(val x: int32, val y: int32, val z: int32) : void;
extern def glWindowPos3iv(val v: int32*) : void;
extern def glWindowPos3s(val x: int16, val y: int16, val z: int16) : void;
extern def glWindowPos3sv(val v: int16*) : void;
extern def glGenQueries(val n: int32, val ids: uint32*) : void;
extern def glDeleteQueries(val n: int32, val ids: uint32*) : void;
extern def glIsQuery(val id: uint32) : uint8;
extern def glBeginQuery(val target: uint32, val id: uint32) : void;
extern def glEndQuery(val target: uint32) : void;
extern def glGetQueryiv(val target: uint32, val pname: uint32, val params: int32*) : void;
extern def glGetQueryObjectiv(val id: uint32, val pname: uint32, val params: int32*) : void;
extern def glGetQueryObjectuiv(val id: uint32, val pname: uint32, val params: uint32*) : void;
extern def glBindBuffer(val target: uint32, val buffer: uint32) : void;
extern def glDeleteBuffers(val n: int32, val buffers: uint32*) : void;
extern def glGenBuffers(val n: int32, val buffers: uint32*) : void;
extern def glIsBuffer(val buffer: uint32) : uint8;
extern def glBufferData(val target: uint32, val size: int64, val data: void*, val usage: uint32) : void;
extern def glBufferSubData(val target: uint32, val offset: int64, val size: int64, val data: void*) : void;
extern def glGetBufferSubData(val target: uint32, val offset: int64, val size: int64, val data: void*) : void;
extern def glMapBuffer(val target: uint32, val access: uint32) : void*;
extern def glUnmapBuffer(val target: uint32) : uint8;
extern def glGetBufferParameteriv(val target: uint32, val pname: uint32, val params: int32*) : void;
extern def glGetBufferPointerv(val target: uint32, val pname: uint32, val params: void**) : void;
extern def glDrawBuffers(val n: int32, val bufs: uint32*) : void;
extern def glVertexAttrib1d(val index: uint32, val x: float64) : void;
extern def glVertexAttrib1dv(val index: uint32, val v: float64*) : void;
extern def glVertexAttrib1f(val index: uint32, val x: float32) : void;
extern def glVertexAttrib1fv(val index: uint32, val v: float32*) : void;
extern def glVertexAttrib1s(val index: uint32, val x: int16) : void;
extern def glVertexAttrib1sv(val index: uint32, val v: int16*) : void;
extern def glVertexAttrib2d(val index: uint32, val x: float64, val y: float64) : void;
extern def glVertexAttrib2dv(val index: uint32, val v: float64*) : void;
extern def glVertexAttrib2f(val index: uint32, val x: float32, val y: float32) : void;
extern def glVertexAttrib2fv(val index: uint32, val v: float32*) : void;
extern def glVertexAttrib2s(val index: uint32, val x: int16, val y: int16) : void;
extern def glVertexAttrib2sv(val index: uint32, val v: int16*) : void;
extern def glVertexAttrib3d(val index: uint32, val x: float64, val y: float64, val z: float64) : void;
extern def glVertexAttrib3dv(val index: uint32, val v: float64*) : void;
extern def glVertexAttrib3f(val index: uint32, val x: float32, val y: float32, val z: float32) : void;
extern def glVertexAttrib3fv(val index: uint32, val v: float32*) : void;
extern def glVertexAttrib3s(val index: uint32, val x: int16, val y: int16, val z: int16) : void;
extern def glVertexAttrib3sv(val index: uint32, val v: int16*) : void;
extern def glVertexAttrib4Nbv(val index: uint32, val v: int8*) : void;
extern def glVertexAttrib4Niv(val index: uint32, val v: int32*) : void;
extern def glVertexAttrib4Nsv(val index: uint32, val v: int16*) : void;
extern def glVertexAttrib4Nub(val index: uint32, val x: uint8, val y: uint8, val z: uint8, val w: uint8) : void;
extern def glVertexAttrib4Nubv(val index: uint32, val v: uint8*) : void;
extern def glVertexAttrib4Nuiv(val index: uint32, val v: uint32*) : void;
extern def glVertexAttrib4Nusv(val index: uint32, val v: uint16*) : void;
extern def glVertexAttrib4bv(val index: uint32, val v: int8*) : void;
extern def glVertexAttrib4d(val index: uint32, val x: float64, val y: float64, val z: float64, val w: float64) : void;
extern def glVertexAttrib4dv(val index: uint32, val v: float64*) : void;
extern def glVertexAttrib4f(val index: uint32, val x: float32, val y: float32, val z: float32, val w: float32) : void;
extern def glVertexAttrib4fv(val index: uint32, val v: float32*) : void;
extern def glVertexAttrib4iv(val index: uint32, val v: int32*) : void;
extern def glVertexAttrib4s(val index: uint32, val x: int16, val y: int16, val z: int16, val w: int16) : void;
extern def glVertexAttrib4sv(val index: uint32, val v: int16*) : void;
extern def glVertexAttrib4ubv(val index: uint32, val v: uint8*) : void;
extern def glVertexAttrib4uiv(val index: uint32, val v: uint32*) : void;
extern def glVertexAttrib4usv(val index: uint32, val v: uint16*) : void;
extern def glVertexAttribPointer(val index: uint32, val size: int32, val type: uint32, val normalized: uint8, val stride: int32, val pointer: void*) : void;
extern def glEnableVertexAttribArray(val index: uint32) : void;
extern def glDisableVertexAttribArray(val index: uint32) : void;
extern def glGetVertexAttribdv(val index: uint32, val pname: uint32, val params: float64*) : void;
extern def glGetVertexAttribfv(val index: uint32, val pname: uint32, val params: float32*) : void;
extern def glGetVertexAttribiv(val index: uint32, val pname: uint32, val params: int32*) : void;
extern def glGetVertexAttribPointerv(val index: uint32, val pname: uint32, val pointer: void**) : void;
extern def glDeleteShader(val shader: uint32) : void;
extern def glDetachShader(val program: uint32, val shader: uint32) : void;
extern def glCreateShader(val type: uint32) : uint32;
extern def glShaderSource(val shader: uint32, val count: int32, val string: int8**, val length: int32*) : void;
extern def glCompileShader(val shader: uint32) : void;
extern def glCreateProgram() : uint32;
extern def glAttachShader(val program: uint32, val shader: uint32) : void;
extern def glLinkProgram(val program: uint32) : void;
extern def glUseProgram(val program: uint32) : void;
extern def glDeleteProgram(val program: uint32) : void;
extern def glValidateProgram(val program: uint32) : void;
extern def glUniform1f(val location: int32, val v0: float32) : void;
extern def glUniform2f(val location: int32, val v0: float32, val v1: float32) : void;
extern def glUniform3f(val location: int32, val v0: float32, val v1: float32, val v2: float32) : void;
extern def glUniform4f(val location: int32, val v0: float32, val v1: float32, val v2: float32, val v3: float32) : void;
extern def glUniform1i(val location: int32, val v0: int32) : void;
extern def glUniform2i(val location: int32, val v0: int32, val v1: int32) : void;
extern def glUniform3i(val location: int32, val v0: int32, val v1: int32, val v2: int32) : void;
extern def glUniform4i(val location: int32, val v0: int32, val v1: int32, val v2: int32, val v3: int32) : void;
extern def glUniform1fv(val location: int32, val count: int32, val value: float32*) : void;
extern def glUniform2fv(val location: int32, val count: int32, val value: float32*) : void;
extern def glUniform3fv(val location: int32, val count: int32, val value: float32*) : void;
extern def glUniform4fv(val location: int32, val count: int32, val value: float32*) : void;
extern def glUniform1iv(val location: int32, val count: int32, val value: int32*) : void;
extern def glUniform2iv(val location: int32, val count: int32, val value: int32*) : void;
extern def glUniform3iv(val location: int32, val count: int32, val value: int32*) : void;
extern def glUniform4iv(val location: int32, val count: int32, val value: int32*) : void;
extern def glUniformMatrix2fv(val location: int32, val count: int32, val transpose: uint8, val value: float32*) : void;
extern def glUniformMatrix3fv(val location: int32, val count: int32, val transpose: uint8, val value: float32*) : void;
extern def glUniformMatrix4fv(val location: int32, val count: int32, val transpose: uint8, val value: float32*) : void;
extern def glIsShader(val shader: uint32) : uint8;
extern def glIsProgram(val program: uint32) : uint8;
extern def glGetShaderiv(val shader: uint32, val pname: uint32, val params: int32*) : void;
extern def glGetProgramiv(val program: uint32, val pname: uint32, val params: int32*) : void;
extern def glGetAttachedShaders(val program: uint32, val maxCount: int32, val count: int32*, val shaders: uint32*) : void;
extern def glGetShaderInfoLog(val shader: uint32, val bufSize: int32, val length: int32*, val infoLog: int8*) : void;
extern def glGetProgramInfoLog(val program: uint32, val bufSize: int32, val length: int32*, val infoLog: int8*) : void;
extern def glGetUniformLocation(val program: uint32, val name: int8*) : int32;
extern def glGetActiveUniform(val program: uint32, val index: uint32, val bufSize: int32, val length: int32*, val size: int32*, val type: uint32*, val name: int8*) : void;
extern def glGetUniformfv(val program: uint32, val location: int32, val params: float32*) : void;
extern def glGetUniformiv(val program: uint32, val location: int32, val params: int32*) : void;
extern def glGetShaderSource(val shader: uint32, val bufSize: int32, val length: int32*, val source: int8*) : void;
extern def glBindAttribLocation(val program: uint32, val index: uint32, val name: int8*) : void;
extern def glGetActiveAttrib(val program: uint32, val index: uint32, val bufSize: int32, val length: int32*, val size: int32*, val type: uint32*, val name: int8*) : void;
extern def glGetAttribLocation(val program: uint32, val name: int8*) : int32;
extern def glStencilFuncSeparate(val face: uint32, val func: uint32, val ref: int32, val mask: uint32) : void;
extern def glStencilOpSeparate(val face: uint32, val fail: uint32, val zfail: uint32, val zpass: uint32) : void;
extern def glStencilMaskSeparate(val face: uint32, val mask: uint32) : void;
extern def glUniformMatrix2x3fv(val location: int32, val count: int32, val transpose: uint8, val value: float32*) : void;
extern def glUniformMatrix3x2fv(val location: int32, val count: int32, val transpose: uint8, val value: float32*) : void;
extern def glUniformMatrix2x4fv(val location: int32, val count: int32, val transpose: uint8, val value: float32*) : void;
extern def glUniformMatrix4x2fv(val location: int32, val count: int32, val transpose: uint8, val value: float32*) : void;
extern def glUniformMatrix3x4fv(val location: int32, val count: int32, val transpose: uint8, val value: float32*) : void;
extern def glUniformMatrix4x3fv(val location: int32, val count: int32, val transpose: uint8, val value: float32*) : void;
