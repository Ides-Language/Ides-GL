struct __GLsync {
}
extern def glCullFace(val mode: uint32) : void;
extern def glFrontFace(val mode: uint32) : void;
extern def glHint(val target: uint32, val mode: uint32) : void;
extern def glLineWidth(val width: float32) : void;
extern def glPointSize(val size: float32) : void;
extern def glPolygonMode(val face: uint32, val mode: uint32) : void;
extern def glScissor(val x: int32, val y: int32, val width: int32, val height: int32) : void;
extern def glTexParameterf(val target: uint32, val pname: uint32, val param: float32) : void;
extern def glTexParameterfv(val target: uint32, val pname: uint32, val params: float32*) : void;
extern def glTexParameteri(val target: uint32, val pname: uint32, val param: int32) : void;
extern def glTexParameteriv(val target: uint32, val pname: uint32, val params: int32*) : void;
extern def glTexImage1D(val target: uint32, val level: int32, val internalformat: int32, val width: int32, val border: int32, val format: uint32, val type: uint32, val pixels: void*) : void;
extern def glTexImage2D(val target: uint32, val level: int32, val internalformat: int32, val width: int32, val height: int32, val border: int32, val format: uint32, val type: uint32, val pixels: void*) : void;
extern def glDrawBuffer(val mode: uint32) : void;
extern def glClear(val mask: uint32) : void;
extern def glClearColor(val red: float32, val green: float32, val blue: float32, val alpha: float32) : void;
extern def glClearStencil(val s: int32) : void;
extern def glClearDepth(val depth: float64) : void;
extern def glStencilMask(val mask: uint32) : void;
extern def glColorMask(val red: uint8, val green: uint8, val blue: uint8, val alpha: uint8) : void;
extern def glDepthMask(val flag: uint8) : void;
extern def glDisable(val cap: uint32) : void;
extern def glEnable(val cap: uint32) : void;
extern def glFinish() : void;
extern def glFlush() : void;
extern def glBlendFunc(val sfactor: uint32, val dfactor: uint32) : void;
extern def glLogicOp(val opcode: uint32) : void;
extern def glStencilFunc(val func: uint32, val ref: int32, val mask: uint32) : void;
extern def glStencilOp(val fail: uint32, val zfail: uint32, val zpass: uint32) : void;
extern def glDepthFunc(val func: uint32) : void;
extern def glPixelStoref(val pname: uint32, val param: float32) : void;
extern def glPixelStorei(val pname: uint32, val param: int32) : void;
extern def glReadBuffer(val mode: uint32) : void;
extern def glReadPixels(val x: int32, val y: int32, val width: int32, val height: int32, val format: uint32, val type: uint32, val pixels: void*) : void;
extern def glGetBooleanv(val pname: uint32, val params: uint8*) : void;
extern def glGetDoublev(val pname: uint32, val params: float64*) : void;
extern def glGetError() : uint32;
extern def glGetFloatv(val pname: uint32, val params: float32*) : void;
extern def glGetIntegerv(val pname: uint32, val params: int32*) : void;
extern def glGetString(val name: uint32) : uint8*;
extern def glGetTexImage(val target: uint32, val level: int32, val format: uint32, val type: uint32, val pixels: void*) : void;
extern def glGetTexParameterfv(val target: uint32, val pname: uint32, val params: float32*) : void;
extern def glGetTexParameteriv(val target: uint32, val pname: uint32, val params: int32*) : void;
extern def glGetTexLevelParameterfv(val target: uint32, val level: int32, val pname: uint32, val params: float32*) : void;
extern def glGetTexLevelParameteriv(val target: uint32, val level: int32, val pname: uint32, val params: int32*) : void;
extern def glIsEnabled(val cap: uint32) : uint8;
extern def glDepthRange(val near: float64, val far: float64) : void;
extern def glViewport(val x: int32, val y: int32, val width: int32, val height: int32) : void;
extern def glDrawArrays(val mode: uint32, val first: int32, val count: int32) : void;
extern def glDrawElements(val mode: uint32, val count: int32, val type: uint32, val indices: void*) : void;
extern def glPolygonOffset(val factor: float32, val units: float32) : void;
extern def glCopyTexImage1D(val target: uint32, val level: int32, val internalformat: uint32, val x: int32, val y: int32, val width: int32, val border: int32) : void;
extern def glCopyTexImage2D(val target: uint32, val level: int32, val internalformat: uint32, val x: int32, val y: int32, val width: int32, val height: int32, val border: int32) : void;
extern def glCopyTexSubImage1D(val target: uint32, val level: int32, val xoffset: int32, val x: int32, val y: int32, val width: int32) : void;
extern def glCopyTexSubImage2D(val target: uint32, val level: int32, val xoffset: int32, val yoffset: int32, val x: int32, val y: int32, val width: int32, val height: int32) : void;
extern def glTexSubImage1D(val target: uint32, val level: int32, val xoffset: int32, val width: int32, val format: uint32, val type: uint32, val pixels: void*) : void;
extern def glTexSubImage2D(val target: uint32, val level: int32, val xoffset: int32, val yoffset: int32, val width: int32, val height: int32, val format: uint32, val type: uint32, val pixels: void*) : void;
extern def glBindTexture(val target: uint32, val texture: uint32) : void;
extern def glDeleteTextures(val n: int32, val textures: uint32*) : void;
extern def glGenTextures(val n: int32, val textures: uint32*) : void;
extern def glIsTexture(val texture: uint32) : uint8;
extern def glBlendColor(val red: float32, val green: float32, val blue: float32, val alpha: float32) : void;
extern def glBlendEquation(val mode: uint32) : void;
extern def glDrawRangeElements(val mode: uint32, val start: uint32, val end: uint32, val count: int32, val type: uint32, val indices: void*) : void;
extern def glTexImage3D(val target: uint32, val level: int32, val internalformat: int32, val width: int32, val height: int32, val depth: int32, val border: int32, val format: uint32, val type: uint32, val pixels: void*) : void;
extern def glTexSubImage3D(val target: uint32, val level: int32, val xoffset: int32, val yoffset: int32, val zoffset: int32, val width: int32, val height: int32, val depth: int32, val format: uint32, val type: uint32, val pixels: void*) : void;
extern def glCopyTexSubImage3D(val target: uint32, val level: int32, val xoffset: int32, val yoffset: int32, val zoffset: int32, val x: int32, val y: int32, val width: int32, val height: int32) : void;
extern def glActiveTexture(val texture: uint32) : void;
extern def glSampleCoverage(val value: float32, val invert: uint8) : void;
extern def glCompressedTexImage3D(val target: uint32, val level: int32, val internalformat: uint32, val width: int32, val height: int32, val depth: int32, val border: int32, val imageSize: int32, val data: void*) : void;
extern def glCompressedTexImage2D(val target: uint32, val level: int32, val internalformat: uint32, val width: int32, val height: int32, val border: int32, val imageSize: int32, val data: void*) : void;
extern def glCompressedTexImage1D(val target: uint32, val level: int32, val internalformat: uint32, val width: int32, val border: int32, val imageSize: int32, val data: void*) : void;
extern def glCompressedTexSubImage3D(val target: uint32, val level: int32, val xoffset: int32, val yoffset: int32, val zoffset: int32, val width: int32, val height: int32, val depth: int32, val format: uint32, val imageSize: int32, val data: void*) : void;
extern def glCompressedTexSubImage2D(val target: uint32, val level: int32, val xoffset: int32, val yoffset: int32, val width: int32, val height: int32, val format: uint32, val imageSize: int32, val data: void*) : void;
extern def glCompressedTexSubImage1D(val target: uint32, val level: int32, val xoffset: int32, val width: int32, val format: uint32, val imageSize: int32, val data: void*) : void;
extern def glGetCompressedTexImage(val target: uint32, val level: int32, val img: void*) : void;
extern def glBlendFuncSeparate(val sfactorRGB: uint32, val dfactorRGB: uint32, val sfactorAlpha: uint32, val dfactorAlpha: uint32) : void;
extern def glMultiDrawArrays(val mode: uint32, val first: int32*, val count: int32*, val primcount: int32) : void;
extern def glMultiDrawElements(val mode: uint32, val count: int32*, val type: uint32, val indices: void**, val primcount: int32) : void;
extern def glPointParameterf(val pname: uint32, val param: float32) : void;
extern def glPointParameterfv(val pname: uint32, val params: float32*) : void;
extern def glPointParameteri(val pname: uint32, val param: int32) : void;
extern def glPointParameteriv(val pname: uint32, val params: int32*) : void;
extern def glGenQueries(val n: int32, val ids: uint32*) : void;
extern def glDeleteQueries(val n: int32, val ids: uint32*) : void;
extern def glIsQuery(val id: uint32) : uint8;
extern def glBeginQuery(val target: uint32, val id: uint32) : void;
extern def glEndQuery(val target: uint32) : void;
extern def glGetQueryiv(val target: uint32, val pname: uint32, val params: int32*) : void;
extern def glGetQueryObjectiv(val id: uint32, val pname: uint32, val params: int32*) : void;
extern def glGetQueryObjectuiv(val id: uint32, val pname: uint32, val params: uint32*) : void;
extern def glBindBuffer(val target: uint32, val buffer: uint32) : void;
extern def glDeleteBuffers(val n: int32, val buffers: uint32*) : void;
extern def glGenBuffers(val n: int32, val buffers: uint32*) : void;
extern def glIsBuffer(val buffer: uint32) : uint8;
extern def glBufferData(val target: uint32, val size: int64, val data: void*, val usage: uint32) : void;
extern def glBufferSubData(val target: uint32, val offset: int64, val size: int64, val data: void*) : void;
extern def glGetBufferSubData(val target: uint32, val offset: int64, val size: int64, val data: void*) : void;
extern def glMapBuffer(val target: uint32, val access: uint32) : void*;
extern def glUnmapBuffer(val target: uint32) : uint8;
extern def glGetBufferParameteriv(val target: uint32, val pname: uint32, val params: int32*) : void;
extern def glGetBufferPointerv(val target: uint32, val pname: uint32, val params: void**) : void;
extern def glBlendEquationSeparate(val modeRGB: uint32, val modeAlpha: uint32) : void;
extern def glDrawBuffers(val n: int32, val bufs: uint32*) : void;
extern def glStencilOpSeparate(val face: uint32, val sfail: uint32, val dpfail: uint32, val dppass: uint32) : void;
extern def glStencilFuncSeparate(val face: uint32, val func: uint32, val ref: int32, val mask: uint32) : void;
extern def glStencilMaskSeparate(val face: uint32, val mask: uint32) : void;
extern def glAttachShader(val program: uint32, val shader: uint32) : void;
extern def glBindAttribLocation(val program: uint32, val index: uint32, val name: int8*) : void;
extern def glCompileShader(val shader: uint32) : void;
extern def glCreateProgram() : uint32;
extern def glCreateShader(val type: uint32) : uint32;
extern def glDeleteProgram(val program: uint32) : void;
extern def glDeleteShader(val shader: uint32) : void;
extern def glDetachShader(val program: uint32, val shader: uint32) : void;
extern def glDisableVertexAttribArray(val index: uint32) : void;
extern def glEnableVertexAttribArray(val index: uint32) : void;
extern def glGetActiveAttrib(val program: uint32, val index: uint32, val bufSize: int32, val length: int32*, val size: int32*, val type: uint32*, val name: int8*) : void;
extern def glGetActiveUniform(val program: uint32, val index: uint32, val bufSize: int32, val length: int32*, val size: int32*, val type: uint32*, val name: int8*) : void;
extern def glGetAttachedShaders(val program: uint32, val maxCount: int32, val count: int32*, val obj: uint32*) : void;
extern def glGetAttribLocation(val program: uint32, val name: int8*) : int32;
extern def glGetProgramiv(val program: uint32, val pname: uint32, val params: int32*) : void;
extern def glGetProgramInfoLog(val program: uint32, val bufSize: int32, val length: int32*, val infoLog: int8*) : void;
extern def glGetShaderiv(val shader: uint32, val pname: uint32, val params: int32*) : void;
extern def glGetShaderInfoLog(val shader: uint32, val bufSize: int32, val length: int32*, val infoLog: int8*) : void;
extern def glGetShaderSource(val shader: uint32, val bufSize: int32, val length: int32*, val source: int8*) : void;
extern def glGetUniformLocation(val program: uint32, val name: int8*) : int32;
extern def glGetUniformfv(val program: uint32, val location: int32, val params: float32*) : void;
extern def glGetUniformiv(val program: uint32, val location: int32, val params: int32*) : void;
extern def glGetVertexAttribdv(val index: uint32, val pname: uint32, val params: float64*) : void;
extern def glGetVertexAttribfv(val index: uint32, val pname: uint32, val params: float32*) : void;
extern def glGetVertexAttribiv(val index: uint32, val pname: uint32, val params: int32*) : void;
extern def glGetVertexAttribPointerv(val index: uint32, val pname: uint32, val pointer: void**) : void;
extern def glIsProgram(val program: uint32) : uint8;
extern def glIsShader(val shader: uint32) : uint8;
extern def glLinkProgram(val program: uint32) : void;
extern def glShaderSource(val shader: uint32, val count: int32, val string: int8**, val length: int32*) : void;
extern def glUseProgram(val program: uint32) : void;
extern def glUniform1f(val location: int32, val v0: float32) : void;
extern def glUniform2f(val location: int32, val v0: float32, val v1: float32) : void;
extern def glUniform3f(val location: int32, val v0: float32, val v1: float32, val v2: float32) : void;
extern def glUniform4f(val location: int32, val v0: float32, val v1: float32, val v2: float32, val v3: float32) : void;
extern def glUniform1i(val location: int32, val v0: int32) : void;
extern def glUniform2i(val location: int32, val v0: int32, val v1: int32) : void;
extern def glUniform3i(val location: int32, val v0: int32, val v1: int32, val v2: int32) : void;
extern def glUniform4i(val location: int32, val v0: int32, val v1: int32, val v2: int32, val v3: int32) : void;
extern def glUniform1fv(val location: int32, val count: int32, val value: float32*) : void;
extern def glUniform2fv(val location: int32, val count: int32, val value: float32*) : void;
extern def glUniform3fv(val location: int32, val count: int32, val value: float32*) : void;
extern def glUniform4fv(val location: int32, val count: int32, val value: float32*) : void;
extern def glUniform1iv(val location: int32, val count: int32, val value: int32*) : void;
extern def glUniform2iv(val location: int32, val count: int32, val value: int32*) : void;
extern def glUniform3iv(val location: int32, val count: int32, val value: int32*) : void;
extern def glUniform4iv(val location: int32, val count: int32, val value: int32*) : void;
extern def glUniformMatrix2fv(val location: int32, val count: int32, val transpose: uint8, val value: float32*) : void;
extern def glUniformMatrix3fv(val location: int32, val count: int32, val transpose: uint8, val value: float32*) : void;
extern def glUniformMatrix4fv(val location: int32, val count: int32, val transpose: uint8, val value: float32*) : void;
extern def glValidateProgram(val program: uint32) : void;
extern def glVertexAttrib1d(val index: uint32, val x: float64) : void;
extern def glVertexAttrib1dv(val index: uint32, val v: float64*) : void;
extern def glVertexAttrib1f(val index: uint32, val x: float32) : void;
extern def glVertexAttrib1fv(val index: uint32, val v: float32*) : void;
extern def glVertexAttrib1s(val index: uint32, val x: int16) : void;
extern def glVertexAttrib1sv(val index: uint32, val v: int16*) : void;
extern def glVertexAttrib2d(val index: uint32, val x: float64, val y: float64) : void;
extern def glVertexAttrib2dv(val index: uint32, val v: float64*) : void;
extern def glVertexAttrib2f(val index: uint32, val x: float32, val y: float32) : void;
extern def glVertexAttrib2fv(val index: uint32, val v: float32*) : void;
extern def glVertexAttrib2s(val index: uint32, val x: int16, val y: int16) : void;
extern def glVertexAttrib2sv(val index: uint32, val v: int16*) : void;
extern def glVertexAttrib3d(val index: uint32, val x: float64, val y: float64, val z: float64) : void;
extern def glVertexAttrib3dv(val index: uint32, val v: float64*) : void;
extern def glVertexAttrib3f(val index: uint32, val x: float32, val y: float32, val z: float32) : void;
extern def glVertexAttrib3fv(val index: uint32, val v: float32*) : void;
extern def glVertexAttrib3s(val index: uint32, val x: int16, val y: int16, val z: int16) : void;
extern def glVertexAttrib3sv(val index: uint32, val v: int16*) : void;
extern def glVertexAttrib4Nbv(val index: uint32, val v: int8*) : void;
extern def glVertexAttrib4Niv(val index: uint32, val v: int32*) : void;
extern def glVertexAttrib4Nsv(val index: uint32, val v: int16*) : void;
extern def glVertexAttrib4Nub(val index: uint32, val x: uint8, val y: uint8, val z: uint8, val w: uint8) : void;
extern def glVertexAttrib4Nubv(val index: uint32, val v: uint8*) : void;
extern def glVertexAttrib4Nuiv(val index: uint32, val v: uint32*) : void;
extern def glVertexAttrib4Nusv(val index: uint32, val v: uint16*) : void;
extern def glVertexAttrib4bv(val index: uint32, val v: int8*) : void;
extern def glVertexAttrib4d(val index: uint32, val x: float64, val y: float64, val z: float64, val w: float64) : void;
extern def glVertexAttrib4dv(val index: uint32, val v: float64*) : void;
extern def glVertexAttrib4f(val index: uint32, val x: float32, val y: float32, val z: float32, val w: float32) : void;
extern def glVertexAttrib4fv(val index: uint32, val v: float32*) : void;
extern def glVertexAttrib4iv(val index: uint32, val v: int32*) : void;
extern def glVertexAttrib4s(val index: uint32, val x: int16, val y: int16, val z: int16, val w: int16) : void;
extern def glVertexAttrib4sv(val index: uint32, val v: int16*) : void;
extern def glVertexAttrib4ubv(val index: uint32, val v: uint8*) : void;
extern def glVertexAttrib4uiv(val index: uint32, val v: uint32*) : void;
extern def glVertexAttrib4usv(val index: uint32, val v: uint16*) : void;
extern def glVertexAttribPointer(val index: uint32, val size: int32, val type: uint32, val normalized: uint8, val stride: int32, val pointer: void*) : void;
extern def glUniformMatrix2x3fv(val location: int32, val count: int32, val transpose: uint8, val value: float32*) : void;
extern def glUniformMatrix3x2fv(val location: int32, val count: int32, val transpose: uint8, val value: float32*) : void;
extern def glUniformMatrix2x4fv(val location: int32, val count: int32, val transpose: uint8, val value: float32*) : void;
extern def glUniformMatrix4x2fv(val location: int32, val count: int32, val transpose: uint8, val value: float32*) : void;
extern def glUniformMatrix3x4fv(val location: int32, val count: int32, val transpose: uint8, val value: float32*) : void;
extern def glUniformMatrix4x3fv(val location: int32, val count: int32, val transpose: uint8, val value: float32*) : void;
extern def glColorMaski(val index: uint32, val r: uint8, val g: uint8, val b: uint8, val a: uint8) : void;
extern def glGetBooleani_v(val target: uint32, val index: uint32, val data: uint8*) : void;
extern def glGetIntegeri_v(val target: uint32, val index: uint32, val data: int32*) : void;
extern def glEnablei(val target: uint32, val index: uint32) : void;
extern def glDisablei(val target: uint32, val index: uint32) : void;
extern def glIsEnabledi(val target: uint32, val index: uint32) : uint8;
extern def glBeginTransformFeedback(val primitiveMode: uint32) : void;
extern def glEndTransformFeedback() : void;
extern def glBindBufferRange(val target: uint32, val index: uint32, val buffer: uint32, val offset: int64, val size: int64) : void;
extern def glBindBufferBase(val target: uint32, val index: uint32, val buffer: uint32) : void;
extern def glTransformFeedbackVaryings(val program: uint32, val count: int32, val varyings: int8**, val bufferMode: uint32) : void;
extern def glGetTransformFeedbackVarying(val program: uint32, val index: uint32, val bufSize: int32, val length: int32*, val size: int32*, val type: uint32*, val name: int8*) : void;
extern def glClampColor(val target: uint32, val clamp: uint32) : void;
extern def glBeginConditionalRender(val id: uint32, val mode: uint32) : void;
extern def glEndConditionalRender() : void;
extern def glVertexAttribIPointer(val index: uint32, val size: int32, val type: uint32, val stride: int32, val pointer: void*) : void;
extern def glGetVertexAttribIiv(val index: uint32, val pname: uint32, val params: int32*) : void;
extern def glGetVertexAttribIuiv(val index: uint32, val pname: uint32, val params: uint32*) : void;
extern def glVertexAttribI1i(val index: uint32, val x: int32) : void;
extern def glVertexAttribI2i(val index: uint32, val x: int32, val y: int32) : void;
extern def glVertexAttribI3i(val index: uint32, val x: int32, val y: int32, val z: int32) : void;
extern def glVertexAttribI4i(val index: uint32, val x: int32, val y: int32, val z: int32, val w: int32) : void;
extern def glVertexAttribI1ui(val index: uint32, val x: uint32) : void;
extern def glVertexAttribI2ui(val index: uint32, val x: uint32, val y: uint32) : void;
extern def glVertexAttribI3ui(val index: uint32, val x: uint32, val y: uint32, val z: uint32) : void;
extern def glVertexAttribI4ui(val index: uint32, val x: uint32, val y: uint32, val z: uint32, val w: uint32) : void;
extern def glVertexAttribI1iv(val index: uint32, val v: int32*) : void;
extern def glVertexAttribI2iv(val index: uint32, val v: int32*) : void;
extern def glVertexAttribI3iv(val index: uint32, val v: int32*) : void;
extern def glVertexAttribI4iv(val index: uint32, val v: int32*) : void;
extern def glVertexAttribI1uiv(val index: uint32, val v: uint32*) : void;
extern def glVertexAttribI2uiv(val index: uint32, val v: uint32*) : void;
extern def glVertexAttribI3uiv(val index: uint32, val v: uint32*) : void;
extern def glVertexAttribI4uiv(val index: uint32, val v: uint32*) : void;
extern def glVertexAttribI4bv(val index: uint32, val v: int8*) : void;
extern def glVertexAttribI4sv(val index: uint32, val v: int16*) : void;
extern def glVertexAttribI4ubv(val index: uint32, val v: uint8*) : void;
extern def glVertexAttribI4usv(val index: uint32, val v: uint16*) : void;
extern def glGetUniformuiv(val program: uint32, val location: int32, val params: uint32*) : void;
extern def glBindFragDataLocation(val program: uint32, val color: uint32, val name: int8*) : void;
extern def glGetFragDataLocation(val program: uint32, val name: int8*) : int32;
extern def glUniform1ui(val location: int32, val v0: uint32) : void;
extern def glUniform2ui(val location: int32, val v0: uint32, val v1: uint32) : void;
extern def glUniform3ui(val location: int32, val v0: uint32, val v1: uint32, val v2: uint32) : void;
extern def glUniform4ui(val location: int32, val v0: uint32, val v1: uint32, val v2: uint32, val v3: uint32) : void;
extern def glUniform1uiv(val location: int32, val count: int32, val value: uint32*) : void;
extern def glUniform2uiv(val location: int32, val count: int32, val value: uint32*) : void;
extern def glUniform3uiv(val location: int32, val count: int32, val value: uint32*) : void;
extern def glUniform4uiv(val location: int32, val count: int32, val value: uint32*) : void;
extern def glTexParameterIiv(val target: uint32, val pname: uint32, val params: int32*) : void;
extern def glTexParameterIuiv(val target: uint32, val pname: uint32, val params: uint32*) : void;
extern def glGetTexParameterIiv(val target: uint32, val pname: uint32, val params: int32*) : void;
extern def glGetTexParameterIuiv(val target: uint32, val pname: uint32, val params: uint32*) : void;
extern def glClearBufferiv(val buffer: uint32, val drawbuffer: int32, val value: int32*) : void;
extern def glClearBufferuiv(val buffer: uint32, val drawbuffer: int32, val value: uint32*) : void;
extern def glClearBufferfv(val buffer: uint32, val drawbuffer: int32, val value: float32*) : void;
extern def glClearBufferfi(val buffer: uint32, val drawbuffer: int32, val depth: float32, val stencil: int32) : void;
extern def glGetStringi(val name: uint32, val index: uint32) : uint8*;
extern def glDrawArraysInstanced(val mode: uint32, val first: int32, val count: int32, val primcount: int32) : void;
extern def glDrawElementsInstanced(val mode: uint32, val count: int32, val type: uint32, val indices: void*, val primcount: int32) : void;
extern def glTexBuffer(val target: uint32, val internalformat: uint32, val buffer: uint32) : void;
extern def glPrimitiveRestartIndex(val index: uint32) : void;
extern def glGetInteger64i_v(val target: uint32, val index: uint32, val data: int64*) : void;
extern def glGetBufferParameteri64v(val target: uint32, val pname: uint32, val params: int64*) : void;
extern def glFramebufferTexture(val target: uint32, val attachment: uint32, val texture: uint32, val level: int32) : void;
extern def glIsRenderbuffer(val renderbuffer: uint32) : uint8;
extern def glBindRenderbuffer(val target: uint32, val renderbuffer: uint32) : void;
extern def glDeleteRenderbuffers(val n: int32, val renderbuffers: uint32*) : void;
extern def glGenRenderbuffers(val n: int32, val renderbuffers: uint32*) : void;
extern def glRenderbufferStorage(val target: uint32, val internalformat: uint32, val width: int32, val height: int32) : void;
extern def glGetRenderbufferParameteriv(val target: uint32, val pname: uint32, val params: int32*) : void;
extern def glIsFramebuffer(val framebuffer: uint32) : uint8;
extern def glBindFramebuffer(val target: uint32, val framebuffer: uint32) : void;
extern def glDeleteFramebuffers(val n: int32, val framebuffers: uint32*) : void;
extern def glGenFramebuffers(val n: int32, val framebuffers: uint32*) : void;
extern def glCheckFramebufferStatus(val target: uint32) : uint32;
extern def glFramebufferTexture1D(val target: uint32, val attachment: uint32, val textarget: uint32, val texture: uint32, val level: int32) : void;
extern def glFramebufferTexture2D(val target: uint32, val attachment: uint32, val textarget: uint32, val texture: uint32, val level: int32) : void;
extern def glFramebufferTexture3D(val target: uint32, val attachment: uint32, val textarget: uint32, val texture: uint32, val level: int32, val zoffset: int32) : void;
extern def glFramebufferRenderbuffer(val target: uint32, val attachment: uint32, val renderbuffertarget: uint32, val renderbuffer: uint32) : void;
extern def glGetFramebufferAttachmentParameteriv(val target: uint32, val attachment: uint32, val pname: uint32, val params: int32*) : void;
extern def glGenerateMipmap(val target: uint32) : void;
extern def glBlitFramebuffer(val srcX0: int32, val srcY0: int32, val srcX1: int32, val srcY1: int32, val dstX0: int32, val dstY0: int32, val dstX1: int32, val dstY1: int32, val mask: uint32, val filter: uint32) : void;
extern def glRenderbufferStorageMultisample(val target: uint32, val samples: int32, val internalformat: uint32, val width: int32, val height: int32) : void;
extern def glFramebufferTextureLayer(val target: uint32, val attachment: uint32, val texture: uint32, val level: int32, val layer: int32) : void;
extern def glMapBufferRange(val target: uint32, val offset: int64, val length: int64, val access: uint32) : void*;
extern def glFlushMappedBufferRange(val target: uint32, val offset: int64, val length: int64) : void;
extern def glBindVertexArray(val array: uint32) : void;
extern def glDeleteVertexArrays(val n: int32, val arrays: uint32*) : void;
extern def glGenVertexArrays(val n: int32, val arrays: uint32*) : void;
extern def glIsVertexArray(val array: uint32) : uint8;
extern def glGetUniformIndices(val program: uint32, val uniformCount: int32, val uniformNames: int8**, val uniformIndices: uint32*) : void;
extern def glGetActiveUniformsiv(val program: uint32, val uniformCount: int32, val uniformIndices: uint32*, val pname: uint32, val params: int32*) : void;
extern def glGetActiveUniformName(val program: uint32, val uniformIndex: uint32, val bufSize: int32, val length: int32*, val uniformName: int8*) : void;
extern def glGetUniformBlockIndex(val program: uint32, val uniformBlockName: int8*) : uint32;
extern def glGetActiveUniformBlockiv(val program: uint32, val uniformBlockIndex: uint32, val pname: uint32, val params: int32*) : void;
extern def glGetActiveUniformBlockName(val program: uint32, val uniformBlockIndex: uint32, val bufSize: int32, val length: int32*, val uniformBlockName: int8*) : void;
extern def glUniformBlockBinding(val program: uint32, val uniformBlockIndex: uint32, val uniformBlockBinding: uint32) : void;
extern def glCopyBufferSubData(val readTarget: uint32, val writeTarget: uint32, val readOffset: int64, val writeOffset: int64, val size: int64) : void;
extern def glDrawElementsBaseVertex(val mode: uint32, val count: int32, val type: uint32, val indices: void*, val basevertex: int32) : void;
extern def glDrawRangeElementsBaseVertex(val mode: uint32, val start: uint32, val end: uint32, val count: int32, val type: uint32, val indices: void*, val basevertex: int32) : void;
extern def glDrawElementsInstancedBaseVertex(val mode: uint32, val count: int32, val type: uint32, val indices: void*, val primcount: int32, val basevertex: int32) : void;
extern def glMultiDrawElementsBaseVertex(val mode: uint32, val count: int32*, val type: uint32, val indices: void**, val primcount: int32, val basevertex: int32*) : void;
extern def glProvokingVertex(val mode: uint32) : void;
extern def glFenceSync(val condition: uint32, val flags: uint32) : __GLsync*;
extern def glIsSync(val sync: __GLsync*) : uint8;
extern def glDeleteSync(val sync: __GLsync*) : void;
extern def glClientWaitSync(val sync: __GLsync*, val flags: uint32, val timeout: uint64) : uint32;
extern def glWaitSync(val sync: __GLsync*, val flags: uint32, val timeout: uint64) : void;
extern def glGetInteger64v(val pname: uint32, val params: int64*) : void;
extern def glGetSynciv(val sync: __GLsync*, val pname: uint32, val bufSize: int32, val length: int32*, val values: int32*) : void;
extern def glTexImage2DMultisample(val target: uint32, val samples: int32, val internalformat: int32, val width: int32, val height: int32, val fixedsamplelocations: uint8) : void;
extern def glTexImage3DMultisample(val target: uint32, val samples: int32, val internalformat: int32, val width: int32, val height: int32, val depth: int32, val fixedsamplelocations: uint8) : void;
extern def glGetMultisamplefv(val pname: uint32, val index: uint32, val val: float32*) : void;
extern def glSampleMaski(val index: uint32, val mask: uint32) : void;
